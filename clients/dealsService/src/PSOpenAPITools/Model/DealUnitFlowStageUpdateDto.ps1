#
# DealsService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Order
No description available.
.PARAMETER Name
No description available.
.PARAMETER Description
No description available.
.PARAMETER EnrolmentId
No description available.
.PARAMETER DealUnitFlowId
No description available.
.PARAMETER ParentBusinessProcessStageId
No description available.
.OUTPUTS

DealUnitFlowStageUpdateDto<PSCustomObject>
#>

function Initialize-DealUnitFlowStageUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Order},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrolmentId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DealUnitFlowId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ParentBusinessProcessStageId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DealUnitFlowStageUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "order" = ${Order}
            "name" = ${Name}
            "description" = ${Description}
            "enrolmentId" = ${EnrolmentId}
            "dealUnitFlowId" = ${DealUnitFlowId}
            "parentBusinessProcessStageId" = ${ParentBusinessProcessStageId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DealUnitFlowStageUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to DealUnitFlowStageUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DealUnitFlowStageUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToDealUnitFlowStageUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DealUnitFlowStageUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DealUnitFlowStageUpdateDto
        $AllProperties = ("order", "name", "description", "enrolmentId", "dealUnitFlowId", "parentBusinessProcessStageId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "order"))) { #optional property not found
            $Order = $null
        } else {
            $Order = $JsonParameters.PSobject.Properties["order"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrolmentId"))) { #optional property not found
            $EnrolmentId = $null
        } else {
            $EnrolmentId = $JsonParameters.PSobject.Properties["enrolmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dealUnitFlowId"))) { #optional property not found
            $DealUnitFlowId = $null
        } else {
            $DealUnitFlowId = $JsonParameters.PSobject.Properties["dealUnitFlowId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parentBusinessProcessStageId"))) { #optional property not found
            $ParentBusinessProcessStageId = $null
        } else {
            $ParentBusinessProcessStageId = $JsonParameters.PSobject.Properties["parentBusinessProcessStageId"].value
        }

        $PSO = [PSCustomObject]@{
            "order" = ${Order}
            "name" = ${Name}
            "description" = ${Description}
            "enrolmentId" = ${EnrolmentId}
            "dealUnitFlowId" = ${DealUnitFlowId}
            "parentBusinessProcessStageId" = ${ParentBusinessProcessStageId}
        }

        return $PSO
    }

}

