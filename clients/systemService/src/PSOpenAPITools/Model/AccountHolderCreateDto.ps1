#
# SystemService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER QualifiedName
No description available.
.PARAMETER Birthday
No description available.
.PARAMETER FirstName
No description available.
.PARAMETER LastName
No description available.
.PARAMETER PublicName
No description available.
.PARAMETER IdProvider
No description available.
.PARAMETER Gender
No description available.
.PARAMETER Email
No description available.
.PARAMETER About
No description available.
.PARAMETER Status
No description available.
.PARAMETER JobTitle
No description available.
.PARAMETER GitHubUrl
No description available.
.PARAMETER WebsiteUrl
No description available.
.PARAMETER TwitterUrl
No description available.
.PARAMETER FacebookUrl
No description available.
.PARAMETER YouTubeUrl
No description available.
.PARAMETER LinkedInUrl
No description available.
.PARAMETER InstagramUrl
No description available.
.PARAMETER TimezoneId
No description available.
.PARAMETER LanguageId
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER CountryId
No description available.
.PARAMETER StateId
No description available.
.PARAMETER CityId
No description available.
.PARAMETER Password
No description available.
.OUTPUTS

AccountHolderCreateDto<PSCustomObject>
#>

function Initialize-AccountHolderCreateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QualifiedName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Birthday},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FirstName},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastName},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PublicName},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdProvider},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2")]
        [System.Nullable[Int32]]
        ${Gender},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Email},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${About},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${JobTitle},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GitHubUrl},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebsiteUrl},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterUrl},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookUrl},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${YouTubeUrl},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LinkedInUrl},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InstagramUrl},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TimezoneId},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LanguageId},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CountryId},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StateId},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CityId},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Password}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AccountHolderCreateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "qualifiedName" = ${QualifiedName}
            "birthday" = ${Birthday}
            "firstName" = ${FirstName}
            "lastName" = ${LastName}
            "publicName" = ${PublicName}
            "idProvider" = ${IdProvider}
            "gender" = ${Gender}
            "email" = ${Email}
            "about" = ${About}
            "status" = ${Status}
            "jobTitle" = ${JobTitle}
            "gitHubUrl" = ${GitHubUrl}
            "websiteUrl" = ${WebsiteUrl}
            "twitterUrl" = ${TwitterUrl}
            "facebookUrl" = ${FacebookUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "timezoneId" = ${TimezoneId}
            "languageId" = ${LanguageId}
            "currencyId" = ${CurrencyId}
            "countryId" = ${CountryId}
            "stateId" = ${StateId}
            "cityId" = ${CityId}
            "password" = ${Password}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AccountHolderCreateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to AccountHolderCreateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AccountHolderCreateDto<PSCustomObject>
#>
function ConvertFrom-JsonToAccountHolderCreateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AccountHolderCreateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AccountHolderCreateDto
        $AllProperties = ("id", "timestamp", "qualifiedName", "birthday", "firstName", "lastName", "publicName", "idProvider", "gender", "email", "about", "status", "jobTitle", "gitHubUrl", "websiteUrl", "twitterUrl", "facebookUrl", "youTubeUrl", "linkedInUrl", "instagramUrl", "timezoneId", "languageId", "currencyId", "countryId", "stateId", "cityId", "password")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "qualifiedName"))) { #optional property not found
            $QualifiedName = $null
        } else {
            $QualifiedName = $JsonParameters.PSobject.Properties["qualifiedName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "birthday"))) { #optional property not found
            $Birthday = $null
        } else {
            $Birthday = $JsonParameters.PSobject.Properties["birthday"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "firstName"))) { #optional property not found
            $FirstName = $null
        } else {
            $FirstName = $JsonParameters.PSobject.Properties["firstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastName"))) { #optional property not found
            $LastName = $null
        } else {
            $LastName = $JsonParameters.PSobject.Properties["lastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "publicName"))) { #optional property not found
            $PublicName = $null
        } else {
            $PublicName = $JsonParameters.PSobject.Properties["publicName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "idProvider"))) { #optional property not found
            $IdProvider = $null
        } else {
            $IdProvider = $JsonParameters.PSobject.Properties["idProvider"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gender"))) { #optional property not found
            $Gender = $null
        } else {
            $Gender = $JsonParameters.PSobject.Properties["gender"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "email"))) { #optional property not found
            $Email = $null
        } else {
            $Email = $JsonParameters.PSobject.Properties["email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "about"))) { #optional property not found
            $About = $null
        } else {
            $About = $JsonParameters.PSobject.Properties["about"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jobTitle"))) { #optional property not found
            $JobTitle = $null
        } else {
            $JobTitle = $JsonParameters.PSobject.Properties["jobTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gitHubUrl"))) { #optional property not found
            $GitHubUrl = $null
        } else {
            $GitHubUrl = $JsonParameters.PSobject.Properties["gitHubUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "websiteUrl"))) { #optional property not found
            $WebsiteUrl = $null
        } else {
            $WebsiteUrl = $JsonParameters.PSobject.Properties["websiteUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterUrl"))) { #optional property not found
            $TwitterUrl = $null
        } else {
            $TwitterUrl = $JsonParameters.PSobject.Properties["twitterUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookUrl"))) { #optional property not found
            $FacebookUrl = $null
        } else {
            $FacebookUrl = $JsonParameters.PSobject.Properties["facebookUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "youTubeUrl"))) { #optional property not found
            $YouTubeUrl = $null
        } else {
            $YouTubeUrl = $JsonParameters.PSobject.Properties["youTubeUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkedInUrl"))) { #optional property not found
            $LinkedInUrl = $null
        } else {
            $LinkedInUrl = $JsonParameters.PSobject.Properties["linkedInUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "instagramUrl"))) { #optional property not found
            $InstagramUrl = $null
        } else {
            $InstagramUrl = $JsonParameters.PSobject.Properties["instagramUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timezoneId"))) { #optional property not found
            $TimezoneId = $null
        } else {
            $TimezoneId = $JsonParameters.PSobject.Properties["timezoneId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "languageId"))) { #optional property not found
            $LanguageId = $null
        } else {
            $LanguageId = $JsonParameters.PSobject.Properties["languageId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "countryId"))) { #optional property not found
            $CountryId = $null
        } else {
            $CountryId = $JsonParameters.PSobject.Properties["countryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stateId"))) { #optional property not found
            $StateId = $null
        } else {
            $StateId = $JsonParameters.PSobject.Properties["stateId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cityId"))) { #optional property not found
            $CityId = $null
        } else {
            $CityId = $JsonParameters.PSobject.Properties["cityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "password"))) { #optional property not found
            $Password = $null
        } else {
            $Password = $JsonParameters.PSobject.Properties["password"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "qualifiedName" = ${QualifiedName}
            "birthday" = ${Birthday}
            "firstName" = ${FirstName}
            "lastName" = ${LastName}
            "publicName" = ${PublicName}
            "idProvider" = ${IdProvider}
            "gender" = ${Gender}
            "email" = ${Email}
            "about" = ${About}
            "status" = ${Status}
            "jobTitle" = ${JobTitle}
            "gitHubUrl" = ${GitHubUrl}
            "websiteUrl" = ${WebsiteUrl}
            "twitterUrl" = ${TwitterUrl}
            "facebookUrl" = ${FacebookUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "timezoneId" = ${TimezoneId}
            "languageId" = ${LanguageId}
            "currencyId" = ${CurrencyId}
            "countryId" = ${CountryId}
            "stateId" = ${StateId}
            "cityId" = ${CityId}
            "password" = ${Password}
        }

        return $PSO
    }

}

