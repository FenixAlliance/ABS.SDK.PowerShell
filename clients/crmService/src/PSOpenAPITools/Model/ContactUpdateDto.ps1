#
# CrmService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Type
No description available.
.PARAMETER Birthday
No description available.
.PARAMETER Duns
No description available.
.PARAMETER TaxId
No description available.
.PARAMETER Email
No description available.
.PARAMETER FirstName
No description available.
.PARAMETER LastName
No description available.
.PARAMETER PrimaryContactId
No description available.
.PARAMETER QualifiedName
No description available.
.PARAMETER About
No description available.
.PARAMETER MobilePhone
No description available.
.PARAMETER BusinessPhone
No description available.
.PARAMETER JobTitle
No description available.
.PARAMETER CountryId
No description available.
.PARAMETER ParentContactId
No description available.
.PARAMETER StateId
No description available.
.PARAMETER CityId
No description available.
.PARAMETER PostalCode
No description available.
.PARAMETER StreetLine1
No description available.
.PARAMETER StreetLine2
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER LanguageId
No description available.
.PARAMETER TimezoneId
No description available.
.PARAMETER CoverUrl
No description available.
.PARAMETER GithubUsername
No description available.
.PARAMETER InstagramUsername
No description available.
.PARAMETER TwitchUrl
No description available.
.PARAMETER RedditUrl
No description available.
.PARAMETER GitHubUrl
No description available.
.PARAMETER GithubUrl
No description available.
.PARAMETER TikTokUrl
No description available.
.PARAMETER TwitterUrl
No description available.
.PARAMETER YouTubeUrl
No description available.
.PARAMETER WebsiteUrl
No description available.
.PARAMETER FacebookUrl
No description available.
.PARAMETER LinkedInUrl
No description available.
.PARAMETER InstagramUrl
No description available.
.PARAMETER TikTokUsername
No description available.
.PARAMETER StackExchangeUrl
No description available.
.PARAMETER StackOverflowUrl
No description available.
.OUTPUTS

ContactUpdateDto<PSCustomObject>
#>

function Initialize-ContactUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1")]
        [Int32]
        ${Type},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Birthday},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Duns},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Email},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FirstName},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastName},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PrimaryContactId},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QualifiedName},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${About},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MobilePhone},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BusinessPhone},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${JobTitle},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CountryId},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ParentContactId},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StateId},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CityId},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PostalCode},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StreetLine1},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StreetLine2},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LanguageId},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TimezoneId},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CoverUrl},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GithubUsername},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InstagramUsername},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitchUrl},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RedditUrl},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GitHubUrl},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GithubUrl},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TikTokUrl},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterUrl},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${YouTubeUrl},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebsiteUrl},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookUrl},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LinkedInUrl},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InstagramUrl},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TikTokUsername},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StackExchangeUrl},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StackOverflowUrl}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ContactUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Type) {
            throw "invalid value for 'Type', 'Type' cannot be null."
        }

        if (!$Duns -and $Duns.length -gt 9) {
            throw "invalid value for 'Duns', the character length must be smaller than or equal to 9."
        }

        if (!$Duns -and $Duns.length -lt 0) {
            throw "invalid value for 'Duns', the character length must be great than or equal to 0."
        }

        if (!$TaxId -and $TaxId.length -gt 20) {
            throw "invalid value for 'TaxId', the character length must be smaller than or equal to 20."
        }

        if (!$TaxId -and $TaxId.length -lt 0) {
            throw "invalid value for 'TaxId', the character length must be great than or equal to 0."
        }

        if ($null -eq $Email) {
            throw "invalid value for 'Email', 'Email' cannot be null."
        }

        if ($Email.length -lt 1) {
            throw "invalid value for 'Email', the character length must be great than or equal to 1."
        }

        if ($null -eq $FirstName) {
            throw "invalid value for 'FirstName', 'FirstName' cannot be null."
        }

        if ($FirstName.length -gt 50) {
            throw "invalid value for 'FirstName', the character length must be smaller than or equal to 50."
        }

        if ($FirstName.length -lt 1) {
            throw "invalid value for 'FirstName', the character length must be great than or equal to 1."
        }

        if (!$LastName -and $LastName.length -gt 50) {
            throw "invalid value for 'LastName', the character length must be smaller than or equal to 50."
        }

        if (!$PrimaryContactId -and $PrimaryContactId.length -gt 36) {
            throw "invalid value for 'PrimaryContactId', the character length must be smaller than or equal to 36."
        }

        if (!$PrimaryContactId -and $PrimaryContactId.length -lt 0) {
            throw "invalid value for 'PrimaryContactId', the character length must be great than or equal to 0."
        }

        if (!$About -and $About.length -gt 500) {
            throw "invalid value for 'About', the character length must be smaller than or equal to 500."
        }

        if (!$JobTitle -and $JobTitle.length -gt 50) {
            throw "invalid value for 'JobTitle', the character length must be smaller than or equal to 50."
        }

        if (!$CountryId -and $CountryId.length -gt 3) {
            throw "invalid value for 'CountryId', the character length must be smaller than or equal to 3."
        }

        if (!$CountryId -and $CountryId.length -lt 0) {
            throw "invalid value for 'CountryId', the character length must be great than or equal to 0."
        }


        $PSO = [PSCustomObject]@{
            "type" = ${Type}
            "birthday" = ${Birthday}
            "duns" = ${Duns}
            "taxId" = ${TaxId}
            "email" = ${Email}
            "firstName" = ${FirstName}
            "lastName" = ${LastName}
            "primaryContactId" = ${PrimaryContactId}
            "qualifiedName" = ${QualifiedName}
            "about" = ${About}
            "mobilePhone" = ${MobilePhone}
            "businessPhone" = ${BusinessPhone}
            "jobTitle" = ${JobTitle}
            "countryId" = ${CountryId}
            "parentContactId" = ${ParentContactId}
            "stateId" = ${StateId}
            "cityId" = ${CityId}
            "postalCode" = ${PostalCode}
            "streetLine1" = ${StreetLine1}
            "streetLine2" = ${StreetLine2}
            "currencyId" = ${CurrencyId}
            "languageId" = ${LanguageId}
            "timezoneId" = ${TimezoneId}
            "coverUrl" = ${CoverUrl}
            "githubUsername" = ${GithubUsername}
            "instagramUsername" = ${InstagramUsername}
            "twitchUrl" = ${TwitchUrl}
            "redditUrl" = ${RedditUrl}
            "gitHubUrl" = ${GitHubUrl}
            "githubUrl" = ${GithubUrl}
            "tikTokUrl" = ${TikTokUrl}
            "twitterUrl" = ${TwitterUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "websiteUrl" = ${WebsiteUrl}
            "facebookUrl" = ${FacebookUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "tikTokUsername" = ${TikTokUsername}
            "stackExchangeUrl" = ${StackExchangeUrl}
            "stackOverflowUrl" = ${StackOverflowUrl}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ContactUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to ContactUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ContactUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToContactUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ContactUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ContactUpdateDto
        $AllProperties = ("type", "birthday", "duns", "taxId", "email", "firstName", "lastName", "primaryContactId", "qualifiedName", "about", "mobilePhone", "businessPhone", "jobTitle", "countryId", "parentContactId", "stateId", "cityId", "postalCode", "streetLine1", "streetLine2", "currencyId", "languageId", "timezoneId", "coverUrl", "githubUsername", "instagramUsername", "twitchUrl", "redditUrl", "gitHubUrl", "githubUrl", "tikTokUrl", "twitterUrl", "youTubeUrl", "websiteUrl", "facebookUrl", "linkedInUrl", "instagramUrl", "tikTokUsername", "stackExchangeUrl", "stackOverflowUrl")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'type' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'type' missing."
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "email"))) {
            throw "Error! JSON cannot be serialized due to the required property 'email' missing."
        } else {
            $Email = $JsonParameters.PSobject.Properties["email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "firstName"))) {
            throw "Error! JSON cannot be serialized due to the required property 'firstName' missing."
        } else {
            $FirstName = $JsonParameters.PSobject.Properties["firstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "birthday"))) { #optional property not found
            $Birthday = $null
        } else {
            $Birthday = $JsonParameters.PSobject.Properties["birthday"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "duns"))) { #optional property not found
            $Duns = $null
        } else {
            $Duns = $JsonParameters.PSobject.Properties["duns"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxId"))) { #optional property not found
            $TaxId = $null
        } else {
            $TaxId = $JsonParameters.PSobject.Properties["taxId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastName"))) { #optional property not found
            $LastName = $null
        } else {
            $LastName = $JsonParameters.PSobject.Properties["lastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "primaryContactId"))) { #optional property not found
            $PrimaryContactId = $null
        } else {
            $PrimaryContactId = $JsonParameters.PSobject.Properties["primaryContactId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "qualifiedName"))) { #optional property not found
            $QualifiedName = $null
        } else {
            $QualifiedName = $JsonParameters.PSobject.Properties["qualifiedName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "about"))) { #optional property not found
            $About = $null
        } else {
            $About = $JsonParameters.PSobject.Properties["about"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mobilePhone"))) { #optional property not found
            $MobilePhone = $null
        } else {
            $MobilePhone = $JsonParameters.PSobject.Properties["mobilePhone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "businessPhone"))) { #optional property not found
            $BusinessPhone = $null
        } else {
            $BusinessPhone = $JsonParameters.PSobject.Properties["businessPhone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jobTitle"))) { #optional property not found
            $JobTitle = $null
        } else {
            $JobTitle = $JsonParameters.PSobject.Properties["jobTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "countryId"))) { #optional property not found
            $CountryId = $null
        } else {
            $CountryId = $JsonParameters.PSobject.Properties["countryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parentContactId"))) { #optional property not found
            $ParentContactId = $null
        } else {
            $ParentContactId = $JsonParameters.PSobject.Properties["parentContactId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stateId"))) { #optional property not found
            $StateId = $null
        } else {
            $StateId = $JsonParameters.PSobject.Properties["stateId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cityId"))) { #optional property not found
            $CityId = $null
        } else {
            $CityId = $JsonParameters.PSobject.Properties["cityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "postalCode"))) { #optional property not found
            $PostalCode = $null
        } else {
            $PostalCode = $JsonParameters.PSobject.Properties["postalCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "streetLine1"))) { #optional property not found
            $StreetLine1 = $null
        } else {
            $StreetLine1 = $JsonParameters.PSobject.Properties["streetLine1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "streetLine2"))) { #optional property not found
            $StreetLine2 = $null
        } else {
            $StreetLine2 = $JsonParameters.PSobject.Properties["streetLine2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "languageId"))) { #optional property not found
            $LanguageId = $null
        } else {
            $LanguageId = $JsonParameters.PSobject.Properties["languageId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timezoneId"))) { #optional property not found
            $TimezoneId = $null
        } else {
            $TimezoneId = $JsonParameters.PSobject.Properties["timezoneId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "coverUrl"))) { #optional property not found
            $CoverUrl = $null
        } else {
            $CoverUrl = $JsonParameters.PSobject.Properties["coverUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "githubUsername"))) { #optional property not found
            $GithubUsername = $null
        } else {
            $GithubUsername = $JsonParameters.PSobject.Properties["githubUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "instagramUsername"))) { #optional property not found
            $InstagramUsername = $null
        } else {
            $InstagramUsername = $JsonParameters.PSobject.Properties["instagramUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitchUrl"))) { #optional property not found
            $TwitchUrl = $null
        } else {
            $TwitchUrl = $JsonParameters.PSobject.Properties["twitchUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "redditUrl"))) { #optional property not found
            $RedditUrl = $null
        } else {
            $RedditUrl = $JsonParameters.PSobject.Properties["redditUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gitHubUrl"))) { #optional property not found
            $GitHubUrl = $null
        } else {
            $GitHubUrl = $JsonParameters.PSobject.Properties["gitHubUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "githubUrl"))) { #optional property not found
            $GithubUrl = $null
        } else {
            $GithubUrl = $JsonParameters.PSobject.Properties["githubUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tikTokUrl"))) { #optional property not found
            $TikTokUrl = $null
        } else {
            $TikTokUrl = $JsonParameters.PSobject.Properties["tikTokUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterUrl"))) { #optional property not found
            $TwitterUrl = $null
        } else {
            $TwitterUrl = $JsonParameters.PSobject.Properties["twitterUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "youTubeUrl"))) { #optional property not found
            $YouTubeUrl = $null
        } else {
            $YouTubeUrl = $JsonParameters.PSobject.Properties["youTubeUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "websiteUrl"))) { #optional property not found
            $WebsiteUrl = $null
        } else {
            $WebsiteUrl = $JsonParameters.PSobject.Properties["websiteUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookUrl"))) { #optional property not found
            $FacebookUrl = $null
        } else {
            $FacebookUrl = $JsonParameters.PSobject.Properties["facebookUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkedInUrl"))) { #optional property not found
            $LinkedInUrl = $null
        } else {
            $LinkedInUrl = $JsonParameters.PSobject.Properties["linkedInUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "instagramUrl"))) { #optional property not found
            $InstagramUrl = $null
        } else {
            $InstagramUrl = $JsonParameters.PSobject.Properties["instagramUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tikTokUsername"))) { #optional property not found
            $TikTokUsername = $null
        } else {
            $TikTokUsername = $JsonParameters.PSobject.Properties["tikTokUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stackExchangeUrl"))) { #optional property not found
            $StackExchangeUrl = $null
        } else {
            $StackExchangeUrl = $JsonParameters.PSobject.Properties["stackExchangeUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stackOverflowUrl"))) { #optional property not found
            $StackOverflowUrl = $null
        } else {
            $StackOverflowUrl = $JsonParameters.PSobject.Properties["stackOverflowUrl"].value
        }

        $PSO = [PSCustomObject]@{
            "type" = ${Type}
            "birthday" = ${Birthday}
            "duns" = ${Duns}
            "taxId" = ${TaxId}
            "email" = ${Email}
            "firstName" = ${FirstName}
            "lastName" = ${LastName}
            "primaryContactId" = ${PrimaryContactId}
            "qualifiedName" = ${QualifiedName}
            "about" = ${About}
            "mobilePhone" = ${MobilePhone}
            "businessPhone" = ${BusinessPhone}
            "jobTitle" = ${JobTitle}
            "countryId" = ${CountryId}
            "parentContactId" = ${ParentContactId}
            "stateId" = ${StateId}
            "cityId" = ${CityId}
            "postalCode" = ${PostalCode}
            "streetLine1" = ${StreetLine1}
            "streetLine2" = ${StreetLine2}
            "currencyId" = ${CurrencyId}
            "languageId" = ${LanguageId}
            "timezoneId" = ${TimezoneId}
            "coverUrl" = ${CoverUrl}
            "githubUsername" = ${GithubUsername}
            "instagramUsername" = ${InstagramUsername}
            "twitchUrl" = ${TwitchUrl}
            "redditUrl" = ${RedditUrl}
            "gitHubUrl" = ${GitHubUrl}
            "githubUrl" = ${GithubUrl}
            "tikTokUrl" = ${TikTokUrl}
            "twitterUrl" = ${TwitterUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "websiteUrl" = ${WebsiteUrl}
            "facebookUrl" = ${FacebookUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "tikTokUsername" = ${TikTokUsername}
            "stackExchangeUrl" = ${StackExchangeUrl}
            "stackOverflowUrl" = ${StackOverflowUrl}
        }

        return $PSO
    }

}

