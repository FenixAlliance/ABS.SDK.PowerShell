#
# InvoicingService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER TenantId
No description available.
.PARAMETER InvoiceId
No description available.
.PARAMETER EnrollmentId
No description available.
.PARAMETER InvoiceLineId
No description available.
.PARAMETER TaxPolicyId
No description available.
.PARAMETER ItemPriceId
No description available.
.PARAMETER ItemId
No description available.
.PARAMETER TaxAmountInUsd
No description available.
.PARAMETER TaxBaseAmountInUsd
No description available.
.PARAMETER TaxPolicyName
No description available.
.PARAMETER TaxPolicyDescription
No description available.
.OUTPUTS

InvoiceLineAppliedTaxDto<PSCustomObject>
#>

function Initialize-InvoiceLineAppliedTaxDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InvoiceId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrollmentId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InvoiceLineId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxPolicyId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ItemPriceId},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ItemId},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${TaxAmountInUsd},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${TaxBaseAmountInUsd},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxPolicyName},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxPolicyDescription}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => InvoiceLineAppliedTaxDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "tenantId" = ${TenantId}
            "invoiceId" = ${InvoiceId}
            "enrollmentId" = ${EnrollmentId}
            "invoiceLineId" = ${InvoiceLineId}
            "taxPolicyId" = ${TaxPolicyId}
            "itemPriceId" = ${ItemPriceId}
            "itemId" = ${ItemId}
            "taxAmountInUsd" = ${TaxAmountInUsd}
            "taxBaseAmountInUsd" = ${TaxBaseAmountInUsd}
            "taxPolicyName" = ${TaxPolicyName}
            "taxPolicyDescription" = ${TaxPolicyDescription}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InvoiceLineAppliedTaxDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to InvoiceLineAppliedTaxDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InvoiceLineAppliedTaxDto<PSCustomObject>
#>
function ConvertFrom-JsonToInvoiceLineAppliedTaxDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => InvoiceLineAppliedTaxDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in InvoiceLineAppliedTaxDto
        $AllProperties = ("id", "timestamp", "tenantId", "invoiceId", "enrollmentId", "invoiceLineId", "taxPolicyId", "itemPriceId", "itemId", "taxAmountInUsd", "taxBaseAmountInUsd", "taxPolicyName", "taxPolicyDescription")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenantId"))) { #optional property not found
            $TenantId = $null
        } else {
            $TenantId = $JsonParameters.PSobject.Properties["tenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invoiceId"))) { #optional property not found
            $InvoiceId = $null
        } else {
            $InvoiceId = $JsonParameters.PSobject.Properties["invoiceId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrollmentId"))) { #optional property not found
            $EnrollmentId = $null
        } else {
            $EnrollmentId = $JsonParameters.PSobject.Properties["enrollmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invoiceLineId"))) { #optional property not found
            $InvoiceLineId = $null
        } else {
            $InvoiceLineId = $JsonParameters.PSobject.Properties["invoiceLineId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxPolicyId"))) { #optional property not found
            $TaxPolicyId = $null
        } else {
            $TaxPolicyId = $JsonParameters.PSobject.Properties["taxPolicyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "itemPriceId"))) { #optional property not found
            $ItemPriceId = $null
        } else {
            $ItemPriceId = $JsonParameters.PSobject.Properties["itemPriceId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "itemId"))) { #optional property not found
            $ItemId = $null
        } else {
            $ItemId = $JsonParameters.PSobject.Properties["itemId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxAmountInUsd"))) { #optional property not found
            $TaxAmountInUsd = $null
        } else {
            $TaxAmountInUsd = $JsonParameters.PSobject.Properties["taxAmountInUsd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxBaseAmountInUsd"))) { #optional property not found
            $TaxBaseAmountInUsd = $null
        } else {
            $TaxBaseAmountInUsd = $JsonParameters.PSobject.Properties["taxBaseAmountInUsd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxPolicyName"))) { #optional property not found
            $TaxPolicyName = $null
        } else {
            $TaxPolicyName = $JsonParameters.PSobject.Properties["taxPolicyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxPolicyDescription"))) { #optional property not found
            $TaxPolicyDescription = $null
        } else {
            $TaxPolicyDescription = $JsonParameters.PSobject.Properties["taxPolicyDescription"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "tenantId" = ${TenantId}
            "invoiceId" = ${InvoiceId}
            "enrollmentId" = ${EnrollmentId}
            "invoiceLineId" = ${InvoiceLineId}
            "taxPolicyId" = ${TaxPolicyId}
            "itemPriceId" = ${ItemPriceId}
            "itemId" = ${ItemId}
            "taxAmountInUsd" = ${TaxAmountInUsd}
            "taxBaseAmountInUsd" = ${TaxBaseAmountInUsd}
            "taxPolicyName" = ${TaxPolicyName}
            "taxPolicyDescription" = ${TaxPolicyDescription}
        }

        return $PSO
    }

}

