#
# PricingService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER ItemId
No description available.
.PARAMETER UnitId
No description available.
.PARAMETER UnitGroupId
No description available.
.PARAMETER PriceId
No description available.
.PARAMETER PriceListId
No description available.
.PARAMETER DiscountId
No description available.
.PARAMETER DiscountListId
No description available.
.PARAMETER TenantId
No description available.
.PARAMETER EnrollmentId
No description available.
.PARAMETER RoundingPolicyId
No description available.
.PARAMETER EffectiveDiscountPercent
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER TotalBaseAmount
No description available.
.PARAMETER TotalDiscountsAmount
No description available.
.PARAMETER TotalSurchargesAmount
No description available.
.PARAMETER TotalShippingAmount
No description available.
.PARAMETER TotalShippingTaxAmount
No description available.
.PARAMETER TotalTaxAmount
No description available.
.PARAMETER TotalAmount
No description available.
.OUTPUTS

PriceCalculationDto<PSCustomObject>
#>

function Initialize-PriceCalculationDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ItemId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UnitId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UnitGroupId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PriceId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PriceListId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountId},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountListId},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantId},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrollmentId},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RoundingPolicyId},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${EffectiveDiscountPercent},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalBaseAmount},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalDiscountsAmount},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalSurchargesAmount},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalShippingAmount},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalShippingTaxAmount},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalTaxAmount},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${TotalAmount}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PriceCalculationDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "itemId" = ${ItemId}
            "unitId" = ${UnitId}
            "unitGroupId" = ${UnitGroupId}
            "priceId" = ${PriceId}
            "priceListId" = ${PriceListId}
            "discountId" = ${DiscountId}
            "discountListId" = ${DiscountListId}
            "tenantId" = ${TenantId}
            "enrollmentId" = ${EnrollmentId}
            "roundingPolicyId" = ${RoundingPolicyId}
            "effectiveDiscountPercent" = ${EffectiveDiscountPercent}
            "currencyId" = ${CurrencyId}
            "totalBaseAmount" = ${TotalBaseAmount}
            "totalDiscountsAmount" = ${TotalDiscountsAmount}
            "totalSurchargesAmount" = ${TotalSurchargesAmount}
            "totalShippingAmount" = ${TotalShippingAmount}
            "totalShippingTaxAmount" = ${TotalShippingTaxAmount}
            "totalTaxAmount" = ${TotalTaxAmount}
            "totalAmount" = ${TotalAmount}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PriceCalculationDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to PriceCalculationDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PriceCalculationDto<PSCustomObject>
#>
function ConvertFrom-JsonToPriceCalculationDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PriceCalculationDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PriceCalculationDto
        $AllProperties = ("id", "timestamp", "itemId", "unitId", "unitGroupId", "priceId", "priceListId", "discountId", "discountListId", "tenantId", "enrollmentId", "roundingPolicyId", "effectiveDiscountPercent", "currencyId", "totalBaseAmount", "totalDiscountsAmount", "totalSurchargesAmount", "totalShippingAmount", "totalShippingTaxAmount", "totalTaxAmount", "totalAmount")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "itemId"))) { #optional property not found
            $ItemId = $null
        } else {
            $ItemId = $JsonParameters.PSobject.Properties["itemId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "unitId"))) { #optional property not found
            $UnitId = $null
        } else {
            $UnitId = $JsonParameters.PSobject.Properties["unitId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "unitGroupId"))) { #optional property not found
            $UnitGroupId = $null
        } else {
            $UnitGroupId = $JsonParameters.PSobject.Properties["unitGroupId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "priceId"))) { #optional property not found
            $PriceId = $null
        } else {
            $PriceId = $JsonParameters.PSobject.Properties["priceId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "priceListId"))) { #optional property not found
            $PriceListId = $null
        } else {
            $PriceListId = $JsonParameters.PSobject.Properties["priceListId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountId"))) { #optional property not found
            $DiscountId = $null
        } else {
            $DiscountId = $JsonParameters.PSobject.Properties["discountId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountListId"))) { #optional property not found
            $DiscountListId = $null
        } else {
            $DiscountListId = $JsonParameters.PSobject.Properties["discountListId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenantId"))) { #optional property not found
            $TenantId = $null
        } else {
            $TenantId = $JsonParameters.PSobject.Properties["tenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrollmentId"))) { #optional property not found
            $EnrollmentId = $null
        } else {
            $EnrollmentId = $JsonParameters.PSobject.Properties["enrollmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "roundingPolicyId"))) { #optional property not found
            $RoundingPolicyId = $null
        } else {
            $RoundingPolicyId = $JsonParameters.PSobject.Properties["roundingPolicyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "effectiveDiscountPercent"))) { #optional property not found
            $EffectiveDiscountPercent = $null
        } else {
            $EffectiveDiscountPercent = $JsonParameters.PSobject.Properties["effectiveDiscountPercent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalBaseAmount"))) { #optional property not found
            $TotalBaseAmount = $null
        } else {
            $TotalBaseAmount = $JsonParameters.PSobject.Properties["totalBaseAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalDiscountsAmount"))) { #optional property not found
            $TotalDiscountsAmount = $null
        } else {
            $TotalDiscountsAmount = $JsonParameters.PSobject.Properties["totalDiscountsAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalSurchargesAmount"))) { #optional property not found
            $TotalSurchargesAmount = $null
        } else {
            $TotalSurchargesAmount = $JsonParameters.PSobject.Properties["totalSurchargesAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalShippingAmount"))) { #optional property not found
            $TotalShippingAmount = $null
        } else {
            $TotalShippingAmount = $JsonParameters.PSobject.Properties["totalShippingAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalShippingTaxAmount"))) { #optional property not found
            $TotalShippingTaxAmount = $null
        } else {
            $TotalShippingTaxAmount = $JsonParameters.PSobject.Properties["totalShippingTaxAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalTaxAmount"))) { #optional property not found
            $TotalTaxAmount = $null
        } else {
            $TotalTaxAmount = $JsonParameters.PSobject.Properties["totalTaxAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalAmount"))) { #optional property not found
            $TotalAmount = $null
        } else {
            $TotalAmount = $JsonParameters.PSobject.Properties["totalAmount"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "itemId" = ${ItemId}
            "unitId" = ${UnitId}
            "unitGroupId" = ${UnitGroupId}
            "priceId" = ${PriceId}
            "priceListId" = ${PriceListId}
            "discountId" = ${DiscountId}
            "discountListId" = ${DiscountListId}
            "tenantId" = ${TenantId}
            "enrollmentId" = ${EnrollmentId}
            "roundingPolicyId" = ${RoundingPolicyId}
            "effectiveDiscountPercent" = ${EffectiveDiscountPercent}
            "currencyId" = ${CurrencyId}
            "totalBaseAmount" = ${TotalBaseAmount}
            "totalDiscountsAmount" = ${TotalDiscountsAmount}
            "totalSurchargesAmount" = ${TotalSurchargesAmount}
            "totalShippingAmount" = ${TotalShippingAmount}
            "totalShippingTaxAmount" = ${TotalShippingTaxAmount}
            "totalTaxAmount" = ${TotalTaxAmount}
            "totalAmount" = ${TotalAmount}
        }

        return $PSO
    }

}

