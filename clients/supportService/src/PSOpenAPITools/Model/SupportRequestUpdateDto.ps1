#
# SupportService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Title
No description available.
.PARAMETER Description
No description available.
.PARAMETER Approved
No description available.
.PARAMETER ApprovedTimestamp
No description available.
.PARAMETER SupportEntitlementID
No description available.
.OUTPUTS

SupportRequestUpdateDto<PSCustomObject>
#>

function Initialize-SupportRequestUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Title},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Approved},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ApprovedTimestamp},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SupportEntitlementID}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SupportRequestUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "title" = ${Title}
            "description" = ${Description}
            "approved" = ${Approved}
            "approvedTimestamp" = ${ApprovedTimestamp}
            "supportEntitlementID" = ${SupportEntitlementID}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SupportRequestUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to SupportRequestUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SupportRequestUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToSupportRequestUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SupportRequestUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SupportRequestUpdateDto
        $AllProperties = ("title", "description", "approved", "approvedTimestamp", "supportEntitlementID")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "title"))) { #optional property not found
            $Title = $null
        } else {
            $Title = $JsonParameters.PSobject.Properties["title"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approved"))) { #optional property not found
            $Approved = $null
        } else {
            $Approved = $JsonParameters.PSobject.Properties["approved"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approvedTimestamp"))) { #optional property not found
            $ApprovedTimestamp = $null
        } else {
            $ApprovedTimestamp = $JsonParameters.PSobject.Properties["approvedTimestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "supportEntitlementID"))) { #optional property not found
            $SupportEntitlementID = $null
        } else {
            $SupportEntitlementID = $JsonParameters.PSobject.Properties["supportEntitlementID"].value
        }

        $PSO = [PSCustomObject]@{
            "title" = ${Title}
            "description" = ${Description}
            "approved" = ${Approved}
            "approvedTimestamp" = ${ApprovedTimestamp}
            "supportEntitlementID" = ${SupportEntitlementID}
        }

        return $PSO
    }

}

