#
# SystemService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER Name
No description available.
.PARAMETER Assigned
No description available.
.PARAMETER EnrollmentId
No description available.
.PARAMETER SuiteLicenseId
No description available.
.PARAMETER ExpirationDate
No description available.
.PARAMETER AvailableSeats
No description available.
.PARAMETER TotalSeats
No description available.
.OUTPUTS

SuiteLicenseAssignmentDto<PSCustomObject>
#>

function Initialize-SuiteLicenseAssignmentDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Assigned},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrollmentId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SuiteLicenseId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ExpirationDate},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${AvailableSeats},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${TotalSeats}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SuiteLicenseAssignmentDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "name" = ${Name}
            "assigned" = ${Assigned}
            "enrollmentId" = ${EnrollmentId}
            "suiteLicenseId" = ${SuiteLicenseId}
            "expirationDate" = ${ExpirationDate}
            "availableSeats" = ${AvailableSeats}
            "totalSeats" = ${TotalSeats}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SuiteLicenseAssignmentDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to SuiteLicenseAssignmentDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SuiteLicenseAssignmentDto<PSCustomObject>
#>
function ConvertFrom-JsonToSuiteLicenseAssignmentDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SuiteLicenseAssignmentDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SuiteLicenseAssignmentDto
        $AllProperties = ("id", "timestamp", "name", "assigned", "enrollmentId", "suiteLicenseId", "expirationDate", "availableSeats", "totalSeats")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "assigned"))) { #optional property not found
            $Assigned = $null
        } else {
            $Assigned = $JsonParameters.PSobject.Properties["assigned"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrollmentId"))) { #optional property not found
            $EnrollmentId = $null
        } else {
            $EnrollmentId = $JsonParameters.PSobject.Properties["enrollmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "suiteLicenseId"))) { #optional property not found
            $SuiteLicenseId = $null
        } else {
            $SuiteLicenseId = $JsonParameters.PSobject.Properties["suiteLicenseId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "expirationDate"))) { #optional property not found
            $ExpirationDate = $null
        } else {
            $ExpirationDate = $JsonParameters.PSobject.Properties["expirationDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "availableSeats"))) { #optional property not found
            $AvailableSeats = $null
        } else {
            $AvailableSeats = $JsonParameters.PSobject.Properties["availableSeats"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalSeats"))) { #optional property not found
            $TotalSeats = $null
        } else {
            $TotalSeats = $JsonParameters.PSobject.Properties["totalSeats"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "name" = ${Name}
            "assigned" = ${Assigned}
            "enrollmentId" = ${EnrollmentId}
            "suiteLicenseId" = ${SuiteLicenseId}
            "expirationDate" = ${ExpirationDate}
            "availableSeats" = ${AvailableSeats}
            "totalSeats" = ${TotalSeats}
        }

        return $PSO
    }

}

