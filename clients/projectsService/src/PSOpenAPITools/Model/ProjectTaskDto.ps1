#
# ProjectsService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER StartDate
No description available.
.PARAMETER DueLine
No description available.
.PARAMETER ProjectID
No description available.
.PARAMETER ProjectTaskBucketID
No description available.
.OUTPUTS

ProjectTaskDto<PSCustomObject>
#>

function Initialize-ProjectTaskDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${StartDate},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DueLine},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProjectID},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ProjectTaskBucketID}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ProjectTaskDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "startDate" = ${StartDate}
            "dueLine" = ${DueLine}
            "projectID" = ${ProjectID}
            "projectTaskBucketID" = ${ProjectTaskBucketID}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ProjectTaskDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to ProjectTaskDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ProjectTaskDto<PSCustomObject>
#>
function ConvertFrom-JsonToProjectTaskDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ProjectTaskDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ProjectTaskDto
        $AllProperties = ("id", "timestamp", "startDate", "dueLine", "projectID", "projectTaskBucketID")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startDate"))) { #optional property not found
            $StartDate = $null
        } else {
            $StartDate = $JsonParameters.PSobject.Properties["startDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dueLine"))) { #optional property not found
            $DueLine = $null
        } else {
            $DueLine = $JsonParameters.PSobject.Properties["dueLine"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projectID"))) { #optional property not found
            $ProjectID = $null
        } else {
            $ProjectID = $JsonParameters.PSobject.Properties["projectID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projectTaskBucketID"))) { #optional property not found
            $ProjectTaskBucketID = $null
        } else {
            $ProjectTaskBucketID = $JsonParameters.PSobject.Properties["projectTaskBucketID"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "startDate" = ${StartDate}
            "dueLine" = ${DueLine}
            "projectID" = ${ProjectID}
            "projectTaskBucketID" = ${ProjectTaskBucketID}
        }

        return $PSO
    }

}

