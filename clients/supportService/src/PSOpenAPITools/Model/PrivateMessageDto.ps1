#
# SupportService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER Read
No description available.
.PARAMETER Title
No description available.
.PARAMETER Message
No description available.
.PARAMETER ConversationId
No description available.
.PARAMETER SenderSocialProfileId
No description available.
.PARAMETER ReceiverSocialProfileID
No description available.
.PARAMETER SentTimestamp
No description available.
.PARAMETER ReadTimestamp
No description available.
.PARAMETER ReceivedTimestamp
No description available.
.OUTPUTS

PrivateMessageDto<PSCustomObject>
#>

function Initialize-PrivateMessageDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Read},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Title},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConversationId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SenderSocialProfileId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReceiverSocialProfileID},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${SentTimestamp},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ReadTimestamp},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ReceivedTimestamp}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => PrivateMessageDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "read" = ${Read}
            "title" = ${Title}
            "message" = ${Message}
            "conversationId" = ${ConversationId}
            "senderSocialProfileId" = ${SenderSocialProfileId}
            "receiverSocialProfileID" = ${ReceiverSocialProfileID}
            "sentTimestamp" = ${SentTimestamp}
            "readTimestamp" = ${ReadTimestamp}
            "receivedTimestamp" = ${ReceivedTimestamp}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PrivateMessageDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to PrivateMessageDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PrivateMessageDto<PSCustomObject>
#>
function ConvertFrom-JsonToPrivateMessageDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => PrivateMessageDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PrivateMessageDto
        $AllProperties = ("id", "timestamp", "read", "title", "message", "conversationId", "senderSocialProfileId", "receiverSocialProfileID", "sentTimestamp", "readTimestamp", "receivedTimestamp")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "read"))) { #optional property not found
            $Read = $null
        } else {
            $Read = $JsonParameters.PSobject.Properties["read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "title"))) { #optional property not found
            $Title = $null
        } else {
            $Title = $JsonParameters.PSobject.Properties["title"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "conversationId"))) { #optional property not found
            $ConversationId = $null
        } else {
            $ConversationId = $JsonParameters.PSobject.Properties["conversationId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "senderSocialProfileId"))) { #optional property not found
            $SenderSocialProfileId = $null
        } else {
            $SenderSocialProfileId = $JsonParameters.PSobject.Properties["senderSocialProfileId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "receiverSocialProfileID"))) { #optional property not found
            $ReceiverSocialProfileID = $null
        } else {
            $ReceiverSocialProfileID = $JsonParameters.PSobject.Properties["receiverSocialProfileID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sentTimestamp"))) { #optional property not found
            $SentTimestamp = $null
        } else {
            $SentTimestamp = $JsonParameters.PSobject.Properties["sentTimestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readTimestamp"))) { #optional property not found
            $ReadTimestamp = $null
        } else {
            $ReadTimestamp = $JsonParameters.PSobject.Properties["readTimestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "receivedTimestamp"))) { #optional property not found
            $ReceivedTimestamp = $null
        } else {
            $ReceivedTimestamp = $JsonParameters.PSobject.Properties["receivedTimestamp"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "read" = ${Read}
            "title" = ${Title}
            "message" = ${Message}
            "conversationId" = ${ConversationId}
            "senderSocialProfileId" = ${SenderSocialProfileId}
            "receiverSocialProfileID" = ${ReceiverSocialProfileID}
            "sentTimestamp" = ${SentTimestamp}
            "readTimestamp" = ${ReadTimestamp}
            "receivedTimestamp" = ${ReceivedTimestamp}
        }

        return $PSO
    }

}

