#
# HolderService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER Read
No description available.
.PARAMETER Icon
No description available.
.PARAMETER Message
No description available.
.PARAMETER RedirectUrl
No description available.
.PARAMETER SocialProfileID
No description available.
.PARAMETER ReadTimestamp
No description available.
.PARAMETER IssuedTimestamp
No description available.
.OUTPUTS

NotificationDto<PSCustomObject>
#>

function Initialize-NotificationDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Read},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Icon},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RedirectUrl},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SocialProfileID},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ReadTimestamp},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${IssuedTimestamp}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => NotificationDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "read" = ${Read}
            "icon" = ${Icon}
            "message" = ${Message}
            "redirectUrl" = ${RedirectUrl}
            "socialProfileID" = ${SocialProfileID}
            "readTimestamp" = ${ReadTimestamp}
            "issuedTimestamp" = ${IssuedTimestamp}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NotificationDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to NotificationDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NotificationDto<PSCustomObject>
#>
function ConvertFrom-JsonToNotificationDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => NotificationDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NotificationDto
        $AllProperties = ("id", "timestamp", "read", "icon", "message", "redirectUrl", "socialProfileID", "readTimestamp", "issuedTimestamp")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "read"))) { #optional property not found
            $Read = $null
        } else {
            $Read = $JsonParameters.PSobject.Properties["read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "icon"))) { #optional property not found
            $Icon = $null
        } else {
            $Icon = $JsonParameters.PSobject.Properties["icon"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "redirectUrl"))) { #optional property not found
            $RedirectUrl = $null
        } else {
            $RedirectUrl = $JsonParameters.PSobject.Properties["redirectUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "socialProfileID"))) { #optional property not found
            $SocialProfileID = $null
        } else {
            $SocialProfileID = $JsonParameters.PSobject.Properties["socialProfileID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "readTimestamp"))) { #optional property not found
            $ReadTimestamp = $null
        } else {
            $ReadTimestamp = $JsonParameters.PSobject.Properties["readTimestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issuedTimestamp"))) { #optional property not found
            $IssuedTimestamp = $null
        } else {
            $IssuedTimestamp = $JsonParameters.PSobject.Properties["issuedTimestamp"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "read" = ${Read}
            "icon" = ${Icon}
            "message" = ${Message}
            "redirectUrl" = ${RedirectUrl}
            "socialProfileID" = ${SocialProfileID}
            "readTimestamp" = ${ReadTimestamp}
            "issuedTimestamp" = ${IssuedTimestamp}
        }

        return $PSO
    }

}

