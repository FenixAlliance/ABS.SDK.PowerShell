#
# SystemService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
No description available.
.PARAMETER Duns
No description available.
.PARAMETER Slogan
No description available.
.PARAMETER LegalName
No description available.
.PARAMETER Phone
No description available.
.PARAMETER WebUrl
No description available.
.PARAMETER TwitterUsername
No description available.
.PARAMETER FacebookUrl
No description available.
.PARAMETER TwitterUrl
No description available.
.PARAMETER GitHubUrl
No description available.
.PARAMETER LinkedInUrl
No description available.
.PARAMETER InstagramUrl
No description available.
.PARAMETER YouTubeUrl
No description available.
.PARAMETER WhatsAppNumber
No description available.
.PARAMETER SupportPhoneNumber
No description available.
.PARAMETER TaxId
No description available.
.PARAMETER About
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER TimezoneId
No description available.
.PARAMETER LanguageId
No description available.
.PARAMETER CountryId
No description available.
.PARAMETER StateId
No description available.
.PARAMETER CityId
No description available.
.PARAMETER Email
No description available.
.OUTPUTS

TenantUpdateDto<PSCustomObject>
#>

function Initialize-TenantUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Duns},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Slogan},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LegalName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Phone},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebUrl},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterUsername},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookUrl},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterUrl},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GitHubUrl},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LinkedInUrl},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InstagramUrl},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${YouTubeUrl},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WhatsAppNumber},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SupportPhoneNumber},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxId},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${About},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TimezoneId},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LanguageId},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CountryId},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StateId},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CityId},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Email}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TenantUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "duns" = ${Duns}
            "slogan" = ${Slogan}
            "legalName" = ${LegalName}
            "phone" = ${Phone}
            "webUrl" = ${WebUrl}
            "twitterUsername" = ${TwitterUsername}
            "facebookUrl" = ${FacebookUrl}
            "twitterUrl" = ${TwitterUrl}
            "gitHubUrl" = ${GitHubUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "whatsAppNumber" = ${WhatsAppNumber}
            "supportPhoneNumber" = ${SupportPhoneNumber}
            "taxId" = ${TaxId}
            "about" = ${About}
            "currencyId" = ${CurrencyId}
            "timezoneId" = ${TimezoneId}
            "languageId" = ${LanguageId}
            "countryId" = ${CountryId}
            "stateId" = ${StateId}
            "cityId" = ${CityId}
            "email" = ${Email}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TenantUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to TenantUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TenantUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToTenantUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TenantUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TenantUpdateDto
        $AllProperties = ("name", "duns", "slogan", "legalName", "phone", "webUrl", "twitterUsername", "facebookUrl", "twitterUrl", "gitHubUrl", "linkedInUrl", "instagramUrl", "youTubeUrl", "whatsAppNumber", "supportPhoneNumber", "taxId", "about", "currencyId", "timezoneId", "languageId", "countryId", "stateId", "cityId", "email")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "duns"))) { #optional property not found
            $Duns = $null
        } else {
            $Duns = $JsonParameters.PSobject.Properties["duns"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "slogan"))) { #optional property not found
            $Slogan = $null
        } else {
            $Slogan = $JsonParameters.PSobject.Properties["slogan"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "legalName"))) { #optional property not found
            $LegalName = $null
        } else {
            $LegalName = $JsonParameters.PSobject.Properties["legalName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phone"))) { #optional property not found
            $Phone = $null
        } else {
            $Phone = $JsonParameters.PSobject.Properties["phone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "webUrl"))) { #optional property not found
            $WebUrl = $null
        } else {
            $WebUrl = $JsonParameters.PSobject.Properties["webUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterUsername"))) { #optional property not found
            $TwitterUsername = $null
        } else {
            $TwitterUsername = $JsonParameters.PSobject.Properties["twitterUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookUrl"))) { #optional property not found
            $FacebookUrl = $null
        } else {
            $FacebookUrl = $JsonParameters.PSobject.Properties["facebookUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterUrl"))) { #optional property not found
            $TwitterUrl = $null
        } else {
            $TwitterUrl = $JsonParameters.PSobject.Properties["twitterUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gitHubUrl"))) { #optional property not found
            $GitHubUrl = $null
        } else {
            $GitHubUrl = $JsonParameters.PSobject.Properties["gitHubUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkedInUrl"))) { #optional property not found
            $LinkedInUrl = $null
        } else {
            $LinkedInUrl = $JsonParameters.PSobject.Properties["linkedInUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "instagramUrl"))) { #optional property not found
            $InstagramUrl = $null
        } else {
            $InstagramUrl = $JsonParameters.PSobject.Properties["instagramUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "youTubeUrl"))) { #optional property not found
            $YouTubeUrl = $null
        } else {
            $YouTubeUrl = $JsonParameters.PSobject.Properties["youTubeUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "whatsAppNumber"))) { #optional property not found
            $WhatsAppNumber = $null
        } else {
            $WhatsAppNumber = $JsonParameters.PSobject.Properties["whatsAppNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "supportPhoneNumber"))) { #optional property not found
            $SupportPhoneNumber = $null
        } else {
            $SupportPhoneNumber = $JsonParameters.PSobject.Properties["supportPhoneNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxId"))) { #optional property not found
            $TaxId = $null
        } else {
            $TaxId = $JsonParameters.PSobject.Properties["taxId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "about"))) { #optional property not found
            $About = $null
        } else {
            $About = $JsonParameters.PSobject.Properties["about"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timezoneId"))) { #optional property not found
            $TimezoneId = $null
        } else {
            $TimezoneId = $JsonParameters.PSobject.Properties["timezoneId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "languageId"))) { #optional property not found
            $LanguageId = $null
        } else {
            $LanguageId = $JsonParameters.PSobject.Properties["languageId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "countryId"))) { #optional property not found
            $CountryId = $null
        } else {
            $CountryId = $JsonParameters.PSobject.Properties["countryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stateId"))) { #optional property not found
            $StateId = $null
        } else {
            $StateId = $JsonParameters.PSobject.Properties["stateId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cityId"))) { #optional property not found
            $CityId = $null
        } else {
            $CityId = $JsonParameters.PSobject.Properties["cityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "email"))) { #optional property not found
            $Email = $null
        } else {
            $Email = $JsonParameters.PSobject.Properties["email"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "duns" = ${Duns}
            "slogan" = ${Slogan}
            "legalName" = ${LegalName}
            "phone" = ${Phone}
            "webUrl" = ${WebUrl}
            "twitterUsername" = ${TwitterUsername}
            "facebookUrl" = ${FacebookUrl}
            "twitterUrl" = ${TwitterUrl}
            "gitHubUrl" = ${GitHubUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "whatsAppNumber" = ${WhatsAppNumber}
            "supportPhoneNumber" = ${SupportPhoneNumber}
            "taxId" = ${TaxId}
            "about" = ${About}
            "currencyId" = ${CurrencyId}
            "timezoneId" = ${TimezoneId}
            "languageId" = ${LanguageId}
            "countryId" = ${CountryId}
            "stateId" = ${StateId}
            "cityId" = ${CityId}
            "email" = ${Email}
        }

        return $PSO
    }

}

