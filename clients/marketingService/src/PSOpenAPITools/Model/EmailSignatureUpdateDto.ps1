#
# MarketingService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Order
No description available.
.PARAMETER Slug
No description available.
.PARAMETER Name
No description available.
.PARAMETER Title
No description available.
.PARAMETER Excerpt
No description available.
.PARAMETER Password
No description available.
.PARAMETER Description
No description available.
.PARAMETER HighlightImage
No description available.
.PARAMETER CanonicalUrl
No description available.
.PARAMETER SeoTitle
No description available.
.PARAMETER SeoKeyWords
No description available.
.PARAMETER SeoKeyPhrases
No description available.
.PARAMETER MetaDescription
No description available.
.PARAMETER TwitterImage
No description available.
.PARAMETER TwitterTitle
No description available.
.PARAMETER TwitterDescription
No description available.
.PARAMETER FacebookImage
No description available.
.PARAMETER FacebookTitle
No description available.
.PARAMETER FacebookDescription
No description available.
.PARAMETER FeaturedImageURL
No description available.
.PARAMETER Content
No description available.
.PARAMETER Code
No description available.
.PARAMETER Namespace
No description available.
.PARAMETER TypeName
No description available.
.PARAMETER GeneratedCode
No description available.
.PARAMETER CompilationPath
No description available.
.PARAMETER HtmlContent
No description available.
.PARAMETER CSharpContent
No description available.
.PARAMETER RazorContent
No description available.
.PARAMETER CssContent
No description available.
.PARAMETER JsContent
No description available.
.PARAMETER CssFiles
No description available.
.PARAMETER JsFiles
No description available.
.PARAMETER RazorGeneratedCode
No description available.
.PARAMETER CSharpGeneratedCode
No description available.
.PARAMETER PrecompiledLogicSize
No description available.
.PARAMETER PrecompiledLogicSizeLong
No description available.
.PARAMETER PrecompiledViewSize
No description available.
.PARAMETER PrecompiledViewSizeLong
No description available.
.PARAMETER PrecompiledLogicViewSize
No description available.
.PARAMETER Template
No description available.
.PARAMETER Default
No description available.
.PARAMETER Enable
No description available.
.PARAMETER EnableComments
No description available.
.PARAMETER DisplaySocialBox
No description available.
.PARAMETER Published
No description available.
.PARAMETER InTrashCan
No description available.
.PARAMETER SystemLocked
No description available.
.PARAMETER AllowPingbacks
No description available.
.PARAMETER AllowTrackbacks
No description available.
.PARAMETER CornerstoneContent
No description available.
.PARAMETER IsEssentialContent
No description available.
.PARAMETER AllowSearchEngineIndexing
No description available.
.OUTPUTS

EmailSignatureUpdateDto<PSCustomObject>
#>

function Initialize-EmailSignatureUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Order},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Slug},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Title},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Excerpt},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Password},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HighlightImage},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CanonicalUrl},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SeoTitle},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SeoKeyWords},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SeoKeyPhrases},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MetaDescription},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterImage},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterTitle},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterDescription},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookImage},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookTitle},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookDescription},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FeaturedImageURL},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Content},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Code},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Namespace},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TypeName},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GeneratedCode},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CompilationPath},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HtmlContent},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CSharpContent},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RazorContent},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CssContent},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${JsContent},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CssFiles},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${JsFiles},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RazorGeneratedCode},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CSharpGeneratedCode},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PrecompiledLogicSize},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PrecompiledLogicSizeLong},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PrecompiledViewSize},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PrecompiledViewSizeLong},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PrecompiledLogicViewSize},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Template},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Default},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Enable},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${EnableComments},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DisplaySocialBox},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Published},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${InTrashCan},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${SystemLocked},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowPingbacks},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowTrackbacks},
        [Parameter(Position = 50, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CornerstoneContent},
        [Parameter(Position = 51, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsEssentialContent},
        [Parameter(Position = 52, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowSearchEngineIndexing}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => EmailSignatureUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "order" = ${Order}
            "slug" = ${Slug}
            "name" = ${Name}
            "title" = ${Title}
            "excerpt" = ${Excerpt}
            "password" = ${Password}
            "description" = ${Description}
            "highlightImage" = ${HighlightImage}
            "canonicalUrl" = ${CanonicalUrl}
            "seoTitle" = ${SeoTitle}
            "seoKeyWords" = ${SeoKeyWords}
            "seoKeyPhrases" = ${SeoKeyPhrases}
            "metaDescription" = ${MetaDescription}
            "twitterImage" = ${TwitterImage}
            "twitterTitle" = ${TwitterTitle}
            "twitterDescription" = ${TwitterDescription}
            "facebookImage" = ${FacebookImage}
            "facebookTitle" = ${FacebookTitle}
            "facebookDescription" = ${FacebookDescription}
            "featuredImageURL" = ${FeaturedImageURL}
            "content" = ${Content}
            "code" = ${Code}
            "namespace" = ${Namespace}
            "typeName" = ${TypeName}
            "generatedCode" = ${GeneratedCode}
            "compilationPath" = ${CompilationPath}
            "htmlContent" = ${HtmlContent}
            "cSharpContent" = ${CSharpContent}
            "razorContent" = ${RazorContent}
            "cssContent" = ${CssContent}
            "jsContent" = ${JsContent}
            "cssFiles" = ${CssFiles}
            "jsFiles" = ${JsFiles}
            "razorGeneratedCode" = ${RazorGeneratedCode}
            "cSharpGeneratedCode" = ${CSharpGeneratedCode}
            "precompiledLogicSize" = ${PrecompiledLogicSize}
            "precompiledLogicSizeLong" = ${PrecompiledLogicSizeLong}
            "precompiledViewSize" = ${PrecompiledViewSize}
            "precompiledViewSizeLong" = ${PrecompiledViewSizeLong}
            "precompiledLogicViewSize" = ${PrecompiledLogicViewSize}
            "template" = ${Template}
            "default" = ${Default}
            "enable" = ${Enable}
            "enableComments" = ${EnableComments}
            "displaySocialBox" = ${DisplaySocialBox}
            "published" = ${Published}
            "inTrashCan" = ${InTrashCan}
            "systemLocked" = ${SystemLocked}
            "allowPingbacks" = ${AllowPingbacks}
            "allowTrackbacks" = ${AllowTrackbacks}
            "cornerstoneContent" = ${CornerstoneContent}
            "isEssentialContent" = ${IsEssentialContent}
            "allowSearchEngineIndexing" = ${AllowSearchEngineIndexing}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EmailSignatureUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to EmailSignatureUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EmailSignatureUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToEmailSignatureUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => EmailSignatureUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EmailSignatureUpdateDto
        $AllProperties = ("order", "slug", "name", "title", "excerpt", "password", "description", "highlightImage", "canonicalUrl", "seoTitle", "seoKeyWords", "seoKeyPhrases", "metaDescription", "twitterImage", "twitterTitle", "twitterDescription", "facebookImage", "facebookTitle", "facebookDescription", "featuredImageURL", "content", "code", "namespace", "typeName", "generatedCode", "compilationPath", "htmlContent", "cSharpContent", "razorContent", "cssContent", "jsContent", "cssFiles", "jsFiles", "razorGeneratedCode", "cSharpGeneratedCode", "precompiledLogicSize", "precompiledLogicSizeLong", "precompiledViewSize", "precompiledViewSizeLong", "precompiledLogicViewSize", "template", "default", "enable", "enableComments", "displaySocialBox", "published", "inTrashCan", "systemLocked", "allowPingbacks", "allowTrackbacks", "cornerstoneContent", "isEssentialContent", "allowSearchEngineIndexing")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "order"))) { #optional property not found
            $Order = $null
        } else {
            $Order = $JsonParameters.PSobject.Properties["order"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "slug"))) { #optional property not found
            $Slug = $null
        } else {
            $Slug = $JsonParameters.PSobject.Properties["slug"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "title"))) { #optional property not found
            $Title = $null
        } else {
            $Title = $JsonParameters.PSobject.Properties["title"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "excerpt"))) { #optional property not found
            $Excerpt = $null
        } else {
            $Excerpt = $JsonParameters.PSobject.Properties["excerpt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "password"))) { #optional property not found
            $Password = $null
        } else {
            $Password = $JsonParameters.PSobject.Properties["password"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "highlightImage"))) { #optional property not found
            $HighlightImage = $null
        } else {
            $HighlightImage = $JsonParameters.PSobject.Properties["highlightImage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "canonicalUrl"))) { #optional property not found
            $CanonicalUrl = $null
        } else {
            $CanonicalUrl = $JsonParameters.PSobject.Properties["canonicalUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "seoTitle"))) { #optional property not found
            $SeoTitle = $null
        } else {
            $SeoTitle = $JsonParameters.PSobject.Properties["seoTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "seoKeyWords"))) { #optional property not found
            $SeoKeyWords = $null
        } else {
            $SeoKeyWords = $JsonParameters.PSobject.Properties["seoKeyWords"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "seoKeyPhrases"))) { #optional property not found
            $SeoKeyPhrases = $null
        } else {
            $SeoKeyPhrases = $JsonParameters.PSobject.Properties["seoKeyPhrases"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "metaDescription"))) { #optional property not found
            $MetaDescription = $null
        } else {
            $MetaDescription = $JsonParameters.PSobject.Properties["metaDescription"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterImage"))) { #optional property not found
            $TwitterImage = $null
        } else {
            $TwitterImage = $JsonParameters.PSobject.Properties["twitterImage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterTitle"))) { #optional property not found
            $TwitterTitle = $null
        } else {
            $TwitterTitle = $JsonParameters.PSobject.Properties["twitterTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterDescription"))) { #optional property not found
            $TwitterDescription = $null
        } else {
            $TwitterDescription = $JsonParameters.PSobject.Properties["twitterDescription"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookImage"))) { #optional property not found
            $FacebookImage = $null
        } else {
            $FacebookImage = $JsonParameters.PSobject.Properties["facebookImage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookTitle"))) { #optional property not found
            $FacebookTitle = $null
        } else {
            $FacebookTitle = $JsonParameters.PSobject.Properties["facebookTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookDescription"))) { #optional property not found
            $FacebookDescription = $null
        } else {
            $FacebookDescription = $JsonParameters.PSobject.Properties["facebookDescription"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "featuredImageURL"))) { #optional property not found
            $FeaturedImageURL = $null
        } else {
            $FeaturedImageURL = $JsonParameters.PSobject.Properties["featuredImageURL"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "content"))) { #optional property not found
            $Content = $null
        } else {
            $Content = $JsonParameters.PSobject.Properties["content"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) { #optional property not found
            $Code = $null
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "namespace"))) { #optional property not found
            $Namespace = $null
        } else {
            $Namespace = $JsonParameters.PSobject.Properties["namespace"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "typeName"))) { #optional property not found
            $TypeName = $null
        } else {
            $TypeName = $JsonParameters.PSobject.Properties["typeName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generatedCode"))) { #optional property not found
            $GeneratedCode = $null
        } else {
            $GeneratedCode = $JsonParameters.PSobject.Properties["generatedCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "compilationPath"))) { #optional property not found
            $CompilationPath = $null
        } else {
            $CompilationPath = $JsonParameters.PSobject.Properties["compilationPath"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "htmlContent"))) { #optional property not found
            $HtmlContent = $null
        } else {
            $HtmlContent = $JsonParameters.PSobject.Properties["htmlContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cSharpContent"))) { #optional property not found
            $CSharpContent = $null
        } else {
            $CSharpContent = $JsonParameters.PSobject.Properties["cSharpContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "razorContent"))) { #optional property not found
            $RazorContent = $null
        } else {
            $RazorContent = $JsonParameters.PSobject.Properties["razorContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cssContent"))) { #optional property not found
            $CssContent = $null
        } else {
            $CssContent = $JsonParameters.PSobject.Properties["cssContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jsContent"))) { #optional property not found
            $JsContent = $null
        } else {
            $JsContent = $JsonParameters.PSobject.Properties["jsContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cssFiles"))) { #optional property not found
            $CssFiles = $null
        } else {
            $CssFiles = $JsonParameters.PSobject.Properties["cssFiles"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jsFiles"))) { #optional property not found
            $JsFiles = $null
        } else {
            $JsFiles = $JsonParameters.PSobject.Properties["jsFiles"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "razorGeneratedCode"))) { #optional property not found
            $RazorGeneratedCode = $null
        } else {
            $RazorGeneratedCode = $JsonParameters.PSobject.Properties["razorGeneratedCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cSharpGeneratedCode"))) { #optional property not found
            $CSharpGeneratedCode = $null
        } else {
            $CSharpGeneratedCode = $JsonParameters.PSobject.Properties["cSharpGeneratedCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "precompiledLogicSize"))) { #optional property not found
            $PrecompiledLogicSize = $null
        } else {
            $PrecompiledLogicSize = $JsonParameters.PSobject.Properties["precompiledLogicSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "precompiledLogicSizeLong"))) { #optional property not found
            $PrecompiledLogicSizeLong = $null
        } else {
            $PrecompiledLogicSizeLong = $JsonParameters.PSobject.Properties["precompiledLogicSizeLong"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "precompiledViewSize"))) { #optional property not found
            $PrecompiledViewSize = $null
        } else {
            $PrecompiledViewSize = $JsonParameters.PSobject.Properties["precompiledViewSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "precompiledViewSizeLong"))) { #optional property not found
            $PrecompiledViewSizeLong = $null
        } else {
            $PrecompiledViewSizeLong = $JsonParameters.PSobject.Properties["precompiledViewSizeLong"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "precompiledLogicViewSize"))) { #optional property not found
            $PrecompiledLogicViewSize = $null
        } else {
            $PrecompiledLogicViewSize = $JsonParameters.PSobject.Properties["precompiledLogicViewSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "template"))) { #optional property not found
            $Template = $null
        } else {
            $Template = $JsonParameters.PSobject.Properties["template"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "default"))) { #optional property not found
            $Default = $null
        } else {
            $Default = $JsonParameters.PSobject.Properties["default"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enable"))) { #optional property not found
            $Enable = $null
        } else {
            $Enable = $JsonParameters.PSobject.Properties["enable"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enableComments"))) { #optional property not found
            $EnableComments = $null
        } else {
            $EnableComments = $JsonParameters.PSobject.Properties["enableComments"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "displaySocialBox"))) { #optional property not found
            $DisplaySocialBox = $null
        } else {
            $DisplaySocialBox = $JsonParameters.PSobject.Properties["displaySocialBox"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "published"))) { #optional property not found
            $Published = $null
        } else {
            $Published = $JsonParameters.PSobject.Properties["published"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "inTrashCan"))) { #optional property not found
            $InTrashCan = $null
        } else {
            $InTrashCan = $JsonParameters.PSobject.Properties["inTrashCan"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "systemLocked"))) { #optional property not found
            $SystemLocked = $null
        } else {
            $SystemLocked = $JsonParameters.PSobject.Properties["systemLocked"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowPingbacks"))) { #optional property not found
            $AllowPingbacks = $null
        } else {
            $AllowPingbacks = $JsonParameters.PSobject.Properties["allowPingbacks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowTrackbacks"))) { #optional property not found
            $AllowTrackbacks = $null
        } else {
            $AllowTrackbacks = $JsonParameters.PSobject.Properties["allowTrackbacks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cornerstoneContent"))) { #optional property not found
            $CornerstoneContent = $null
        } else {
            $CornerstoneContent = $JsonParameters.PSobject.Properties["cornerstoneContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "isEssentialContent"))) { #optional property not found
            $IsEssentialContent = $null
        } else {
            $IsEssentialContent = $JsonParameters.PSobject.Properties["isEssentialContent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowSearchEngineIndexing"))) { #optional property not found
            $AllowSearchEngineIndexing = $null
        } else {
            $AllowSearchEngineIndexing = $JsonParameters.PSobject.Properties["allowSearchEngineIndexing"].value
        }

        $PSO = [PSCustomObject]@{
            "order" = ${Order}
            "slug" = ${Slug}
            "name" = ${Name}
            "title" = ${Title}
            "excerpt" = ${Excerpt}
            "password" = ${Password}
            "description" = ${Description}
            "highlightImage" = ${HighlightImage}
            "canonicalUrl" = ${CanonicalUrl}
            "seoTitle" = ${SeoTitle}
            "seoKeyWords" = ${SeoKeyWords}
            "seoKeyPhrases" = ${SeoKeyPhrases}
            "metaDescription" = ${MetaDescription}
            "twitterImage" = ${TwitterImage}
            "twitterTitle" = ${TwitterTitle}
            "twitterDescription" = ${TwitterDescription}
            "facebookImage" = ${FacebookImage}
            "facebookTitle" = ${FacebookTitle}
            "facebookDescription" = ${FacebookDescription}
            "featuredImageURL" = ${FeaturedImageURL}
            "content" = ${Content}
            "code" = ${Code}
            "namespace" = ${Namespace}
            "typeName" = ${TypeName}
            "generatedCode" = ${GeneratedCode}
            "compilationPath" = ${CompilationPath}
            "htmlContent" = ${HtmlContent}
            "cSharpContent" = ${CSharpContent}
            "razorContent" = ${RazorContent}
            "cssContent" = ${CssContent}
            "jsContent" = ${JsContent}
            "cssFiles" = ${CssFiles}
            "jsFiles" = ${JsFiles}
            "razorGeneratedCode" = ${RazorGeneratedCode}
            "cSharpGeneratedCode" = ${CSharpGeneratedCode}
            "precompiledLogicSize" = ${PrecompiledLogicSize}
            "precompiledLogicSizeLong" = ${PrecompiledLogicSizeLong}
            "precompiledViewSize" = ${PrecompiledViewSize}
            "precompiledViewSizeLong" = ${PrecompiledViewSizeLong}
            "precompiledLogicViewSize" = ${PrecompiledLogicViewSize}
            "template" = ${Template}
            "default" = ${Default}
            "enable" = ${Enable}
            "enableComments" = ${EnableComments}
            "displaySocialBox" = ${DisplaySocialBox}
            "published" = ${Published}
            "inTrashCan" = ${InTrashCan}
            "systemLocked" = ${SystemLocked}
            "allowPingbacks" = ${AllowPingbacks}
            "allowTrackbacks" = ${AllowTrackbacks}
            "cornerstoneContent" = ${CornerstoneContent}
            "isEssentialContent" = ${IsEssentialContent}
            "allowSearchEngineIndexing" = ${AllowSearchEngineIndexing}
        }

        return $PSO
    }

}

