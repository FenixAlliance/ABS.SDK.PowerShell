#
# MarketingService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
No description available.
.PARAMETER TenantId
No description available.
.PARAMETER EnrolmentId
No description available.
.OUTPUTS

SocialPostBucketUpdateDto<PSCustomObject>
#>

function Initialize-SocialPostBucketUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrolmentId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SocialPostBucketUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Name -and $Name.length -gt 99) {
            throw "invalid value for 'Name', the character length must be smaller than or equal to 99."
        }

        if (!$Name -and $Name.length -lt 0) {
            throw "invalid value for 'Name', the character length must be great than or equal to 0."
        }

        if (!$TenantId -and $TenantId.length -gt 36) {
            throw "invalid value for 'TenantId', the character length must be smaller than or equal to 36."
        }

        if (!$TenantId -and $TenantId.length -lt 0) {
            throw "invalid value for 'TenantId', the character length must be great than or equal to 0."
        }

        if (!$EnrolmentId -and $EnrolmentId.length -gt 36) {
            throw "invalid value for 'EnrolmentId', the character length must be smaller than or equal to 36."
        }

        if (!$EnrolmentId -and $EnrolmentId.length -lt 0) {
            throw "invalid value for 'EnrolmentId', the character length must be great than or equal to 0."
        }


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "tenantId" = ${TenantId}
            "enrolmentId" = ${EnrolmentId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SocialPostBucketUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to SocialPostBucketUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SocialPostBucketUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToSocialPostBucketUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SocialPostBucketUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SocialPostBucketUpdateDto
        $AllProperties = ("name", "tenantId", "enrolmentId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenantId"))) { #optional property not found
            $TenantId = $null
        } else {
            $TenantId = $JsonParameters.PSobject.Properties["tenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrolmentId"))) { #optional property not found
            $EnrolmentId = $null
        } else {
            $EnrolmentId = $JsonParameters.PSobject.Properties["enrolmentId"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "tenantId" = ${TenantId}
            "enrolmentId" = ${EnrolmentId}
        }

        return $PSO
    }

}

