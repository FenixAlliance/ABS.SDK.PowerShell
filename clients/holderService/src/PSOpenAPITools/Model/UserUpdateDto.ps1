#
# HolderService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Birthday
No description available.
.PARAMETER FirstName
No description available.
.PARAMETER LastName
No description available.
.PARAMETER PublicName
No description available.
.PARAMETER IdProvider
No description available.
.PARAMETER LanguageId
No description available.
.PARAMETER TimezoneId
No description available.
.PARAMETER Gender
No description available.
.PARAMETER CityId
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER Status
No description available.
.PARAMETER StateId
No description available.
.PARAMETER About
No description available.
.PARAMETER WebUrl
No description available.
.PARAMETER JobTitle
No description available.
.PARAMETER CoverUrl
No description available.
.PARAMETER AvatarUrl
No description available.
.PARAMETER GitHubUrl
No description available.
.PARAMETER WebsiteUrl
No description available.
.PARAMETER TwitterUrl
No description available.
.PARAMETER FacebookUrl
No description available.
.PARAMETER YouTubeUrl
No description available.
.PARAMETER LinkedInUrl
No description available.
.PARAMETER InstagramUrl
No description available.
.PARAMETER CountryId
No description available.
.PARAMETER GithubUsername
No description available.
.PARAMETER Availability
No description available.
.OUTPUTS

UserUpdateDto<PSCustomObject>
#>

function Initialize-UserUpdateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Birthday},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FirstName},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PublicName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdProvider},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LanguageId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TimezoneId},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Gender},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CityId},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StateId},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${About},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebUrl},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${JobTitle},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CoverUrl},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AvatarUrl},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GitHubUrl},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebsiteUrl},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterUrl},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookUrl},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${YouTubeUrl},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LinkedInUrl},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InstagramUrl},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CountryId},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GithubUsername},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2", "3", "4")]
        [System.Nullable[Int32]]
        ${Availability}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => UserUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "birthday" = ${Birthday}
            "firstName" = ${FirstName}
            "lastName" = ${LastName}
            "publicName" = ${PublicName}
            "idProvider" = ${IdProvider}
            "languageId" = ${LanguageId}
            "timezoneId" = ${TimezoneId}
            "gender" = ${Gender}
            "cityId" = ${CityId}
            "currencyId" = ${CurrencyId}
            "status" = ${Status}
            "stateId" = ${StateId}
            "about" = ${About}
            "webUrl" = ${WebUrl}
            "jobTitle" = ${JobTitle}
            "coverUrl" = ${CoverUrl}
            "avatarUrl" = ${AvatarUrl}
            "gitHubUrl" = ${GitHubUrl}
            "websiteUrl" = ${WebsiteUrl}
            "twitterUrl" = ${TwitterUrl}
            "facebookUrl" = ${FacebookUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "countryId" = ${CountryId}
            "githubUsername" = ${GithubUsername}
            "availability" = ${Availability}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UserUpdateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to UserUpdateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UserUpdateDto<PSCustomObject>
#>
function ConvertFrom-JsonToUserUpdateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => UserUpdateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UserUpdateDto
        $AllProperties = ("birthday", "firstName", "lastName", "publicName", "idProvider", "languageId", "timezoneId", "gender", "cityId", "currencyId", "status", "stateId", "about", "webUrl", "jobTitle", "coverUrl", "avatarUrl", "gitHubUrl", "websiteUrl", "twitterUrl", "facebookUrl", "youTubeUrl", "linkedInUrl", "instagramUrl", "countryId", "githubUsername", "availability")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "birthday"))) { #optional property not found
            $Birthday = $null
        } else {
            $Birthday = $JsonParameters.PSobject.Properties["birthday"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "firstName"))) { #optional property not found
            $FirstName = $null
        } else {
            $FirstName = $JsonParameters.PSobject.Properties["firstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastName"))) { #optional property not found
            $LastName = $null
        } else {
            $LastName = $JsonParameters.PSobject.Properties["lastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "publicName"))) { #optional property not found
            $PublicName = $null
        } else {
            $PublicName = $JsonParameters.PSobject.Properties["publicName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "idProvider"))) { #optional property not found
            $IdProvider = $null
        } else {
            $IdProvider = $JsonParameters.PSobject.Properties["idProvider"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "languageId"))) { #optional property not found
            $LanguageId = $null
        } else {
            $LanguageId = $JsonParameters.PSobject.Properties["languageId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timezoneId"))) { #optional property not found
            $TimezoneId = $null
        } else {
            $TimezoneId = $JsonParameters.PSobject.Properties["timezoneId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gender"))) { #optional property not found
            $Gender = $null
        } else {
            $Gender = $JsonParameters.PSobject.Properties["gender"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cityId"))) { #optional property not found
            $CityId = $null
        } else {
            $CityId = $JsonParameters.PSobject.Properties["cityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stateId"))) { #optional property not found
            $StateId = $null
        } else {
            $StateId = $JsonParameters.PSobject.Properties["stateId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "about"))) { #optional property not found
            $About = $null
        } else {
            $About = $JsonParameters.PSobject.Properties["about"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "webUrl"))) { #optional property not found
            $WebUrl = $null
        } else {
            $WebUrl = $JsonParameters.PSobject.Properties["webUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jobTitle"))) { #optional property not found
            $JobTitle = $null
        } else {
            $JobTitle = $JsonParameters.PSobject.Properties["jobTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "coverUrl"))) { #optional property not found
            $CoverUrl = $null
        } else {
            $CoverUrl = $JsonParameters.PSobject.Properties["coverUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avatarUrl"))) { #optional property not found
            $AvatarUrl = $null
        } else {
            $AvatarUrl = $JsonParameters.PSobject.Properties["avatarUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gitHubUrl"))) { #optional property not found
            $GitHubUrl = $null
        } else {
            $GitHubUrl = $JsonParameters.PSobject.Properties["gitHubUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "websiteUrl"))) { #optional property not found
            $WebsiteUrl = $null
        } else {
            $WebsiteUrl = $JsonParameters.PSobject.Properties["websiteUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterUrl"))) { #optional property not found
            $TwitterUrl = $null
        } else {
            $TwitterUrl = $JsonParameters.PSobject.Properties["twitterUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookUrl"))) { #optional property not found
            $FacebookUrl = $null
        } else {
            $FacebookUrl = $JsonParameters.PSobject.Properties["facebookUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "youTubeUrl"))) { #optional property not found
            $YouTubeUrl = $null
        } else {
            $YouTubeUrl = $JsonParameters.PSobject.Properties["youTubeUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkedInUrl"))) { #optional property not found
            $LinkedInUrl = $null
        } else {
            $LinkedInUrl = $JsonParameters.PSobject.Properties["linkedInUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "instagramUrl"))) { #optional property not found
            $InstagramUrl = $null
        } else {
            $InstagramUrl = $JsonParameters.PSobject.Properties["instagramUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "countryId"))) { #optional property not found
            $CountryId = $null
        } else {
            $CountryId = $JsonParameters.PSobject.Properties["countryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "githubUsername"))) { #optional property not found
            $GithubUsername = $null
        } else {
            $GithubUsername = $JsonParameters.PSobject.Properties["githubUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "availability"))) { #optional property not found
            $Availability = $null
        } else {
            $Availability = $JsonParameters.PSobject.Properties["availability"].value
        }

        $PSO = [PSCustomObject]@{
            "birthday" = ${Birthday}
            "firstName" = ${FirstName}
            "lastName" = ${LastName}
            "publicName" = ${PublicName}
            "idProvider" = ${IdProvider}
            "languageId" = ${LanguageId}
            "timezoneId" = ${TimezoneId}
            "gender" = ${Gender}
            "cityId" = ${CityId}
            "currencyId" = ${CurrencyId}
            "status" = ${Status}
            "stateId" = ${StateId}
            "about" = ${About}
            "webUrl" = ${WebUrl}
            "jobTitle" = ${JobTitle}
            "coverUrl" = ${CoverUrl}
            "avatarUrl" = ${AvatarUrl}
            "gitHubUrl" = ${GitHubUrl}
            "websiteUrl" = ${WebsiteUrl}
            "twitterUrl" = ${TwitterUrl}
            "facebookUrl" = ${FacebookUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "instagramUrl" = ${InstagramUrl}
            "countryId" = ${CountryId}
            "githubUsername" = ${GithubUsername}
            "availability" = ${Availability}
        }

        return $PSO
    }

}

