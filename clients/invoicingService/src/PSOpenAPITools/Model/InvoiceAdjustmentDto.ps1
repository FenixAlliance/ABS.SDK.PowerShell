#
# InvoicingService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER TenantId
No description available.
.PARAMETER InvoiceId
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER EnrollmentId
No description available.
.PARAMETER Description
No description available.
.PARAMETER SurchargePercent
No description available.
.PARAMETER SurchargeAmount
No description available.
.PARAMETER DiscountPercent
No description available.
.PARAMETER DiscountAmount
No description available.
.PARAMETER TotalSurcharge
No description available.
.PARAMETER TotalDiscount
No description available.
.PARAMETER Type
No description available.
.OUTPUTS

InvoiceAdjustmentDto<PSCustomObject>
#>

function Initialize-InvoiceAdjustmentDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InvoiceId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrollmentId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${SurchargePercent},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${SurchargeAmount},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${DiscountPercent},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${DiscountAmount},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${TotalSurcharge},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${TotalDiscount},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1")]
        [System.Nullable[Int32]]
        ${Type}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => InvoiceAdjustmentDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "tenantId" = ${TenantId}
            "invoiceId" = ${InvoiceId}
            "currencyId" = ${CurrencyId}
            "enrollmentId" = ${EnrollmentId}
            "description" = ${Description}
            "surchargePercent" = ${SurchargePercent}
            "surchargeAmount" = ${SurchargeAmount}
            "discountPercent" = ${DiscountPercent}
            "discountAmount" = ${DiscountAmount}
            "totalSurcharge" = ${TotalSurcharge}
            "totalDiscount" = ${TotalDiscount}
            "type" = ${Type}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InvoiceAdjustmentDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to InvoiceAdjustmentDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InvoiceAdjustmentDto<PSCustomObject>
#>
function ConvertFrom-JsonToInvoiceAdjustmentDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => InvoiceAdjustmentDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in InvoiceAdjustmentDto
        $AllProperties = ("id", "timestamp", "tenantId", "invoiceId", "currencyId", "enrollmentId", "description", "surchargePercent", "surchargeAmount", "discountPercent", "discountAmount", "totalSurcharge", "totalDiscount", "type")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenantId"))) { #optional property not found
            $TenantId = $null
        } else {
            $TenantId = $JsonParameters.PSobject.Properties["tenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invoiceId"))) { #optional property not found
            $InvoiceId = $null
        } else {
            $InvoiceId = $JsonParameters.PSobject.Properties["invoiceId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrollmentId"))) { #optional property not found
            $EnrollmentId = $null
        } else {
            $EnrollmentId = $JsonParameters.PSobject.Properties["enrollmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "surchargePercent"))) { #optional property not found
            $SurchargePercent = $null
        } else {
            $SurchargePercent = $JsonParameters.PSobject.Properties["surchargePercent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "surchargeAmount"))) { #optional property not found
            $SurchargeAmount = $null
        } else {
            $SurchargeAmount = $JsonParameters.PSobject.Properties["surchargeAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountPercent"))) { #optional property not found
            $DiscountPercent = $null
        } else {
            $DiscountPercent = $JsonParameters.PSobject.Properties["discountPercent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountAmount"))) { #optional property not found
            $DiscountAmount = $null
        } else {
            $DiscountAmount = $JsonParameters.PSobject.Properties["discountAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalSurcharge"))) { #optional property not found
            $TotalSurcharge = $null
        } else {
            $TotalSurcharge = $JsonParameters.PSobject.Properties["totalSurcharge"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalDiscount"))) { #optional property not found
            $TotalDiscount = $null
        } else {
            $TotalDiscount = $JsonParameters.PSobject.Properties["totalDiscount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "tenantId" = ${TenantId}
            "invoiceId" = ${InvoiceId}
            "currencyId" = ${CurrencyId}
            "enrollmentId" = ${EnrollmentId}
            "description" = ${Description}
            "surchargePercent" = ${SurchargePercent}
            "surchargeAmount" = ${SurchargeAmount}
            "discountPercent" = ${DiscountPercent}
            "discountAmount" = ${DiscountAmount}
            "totalSurcharge" = ${TotalSurcharge}
            "totalDiscount" = ${TotalDiscount}
            "type" = ${Type}
        }

        return $PSO
    }

}

