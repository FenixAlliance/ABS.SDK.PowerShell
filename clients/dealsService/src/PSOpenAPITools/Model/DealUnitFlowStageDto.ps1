#
# DealsService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER Order
No description available.
.PARAMETER Name
No description available.
.PARAMETER DealUnitFlowId
No description available.
.PARAMETER TenantId
No description available.
.PARAMETER Description
No description available.
.PARAMETER EnrolmentId
No description available.
.PARAMETER ParentBusinessProcessStageId
No description available.
.OUTPUTS

DealUnitFlowStageDto<PSCustomObject>
#>

function Initialize-DealUnitFlowStageDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Order},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DealUnitFlowId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantId},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrolmentId},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ParentBusinessProcessStageId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => DealUnitFlowStageDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "order" = ${Order}
            "name" = ${Name}
            "dealUnitFlowId" = ${DealUnitFlowId}
            "tenantId" = ${TenantId}
            "description" = ${Description}
            "enrolmentId" = ${EnrolmentId}
            "parentBusinessProcessStageId" = ${ParentBusinessProcessStageId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DealUnitFlowStageDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to DealUnitFlowStageDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DealUnitFlowStageDto<PSCustomObject>
#>
function ConvertFrom-JsonToDealUnitFlowStageDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => DealUnitFlowStageDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DealUnitFlowStageDto
        $AllProperties = ("id", "timestamp", "order", "name", "dealUnitFlowId", "tenantId", "description", "enrolmentId", "parentBusinessProcessStageId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "order"))) { #optional property not found
            $Order = $null
        } else {
            $Order = $JsonParameters.PSobject.Properties["order"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dealUnitFlowId"))) { #optional property not found
            $DealUnitFlowId = $null
        } else {
            $DealUnitFlowId = $JsonParameters.PSobject.Properties["dealUnitFlowId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenantId"))) { #optional property not found
            $TenantId = $null
        } else {
            $TenantId = $JsonParameters.PSobject.Properties["tenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrolmentId"))) { #optional property not found
            $EnrolmentId = $null
        } else {
            $EnrolmentId = $JsonParameters.PSobject.Properties["enrolmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parentBusinessProcessStageId"))) { #optional property not found
            $ParentBusinessProcessStageId = $null
        } else {
            $ParentBusinessProcessStageId = $JsonParameters.PSobject.Properties["parentBusinessProcessStageId"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "order" = ${Order}
            "name" = ${Name}
            "dealUnitFlowId" = ${DealUnitFlowId}
            "tenantId" = ${TenantId}
            "description" = ${Description}
            "enrolmentId" = ${EnrolmentId}
            "parentBusinessProcessStageId" = ${ParentBusinessProcessStageId}
        }

        return $PSO
    }

}

