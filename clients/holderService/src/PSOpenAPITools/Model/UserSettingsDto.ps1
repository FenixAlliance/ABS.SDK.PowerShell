#
# HolderService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER PageSize
No description available.
.PARAMETER DateFormat
No description available.
.PARAMETER CurrencyFormat
No description available.
.PARAMETER DateTimeFormat
No description available.
.PARAMETER SiteTheme
No description available.
.OUTPUTS

UserSettingsDto<PSCustomObject>
#>

function Initialize-UserSettingsDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PageSize},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateFormat},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyFormat},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateTimeFormat},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2")]
        [System.Nullable[Int32]]
        ${SiteTheme}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => UserSettingsDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "pageSize" = ${PageSize}
            "dateFormat" = ${DateFormat}
            "currencyFormat" = ${CurrencyFormat}
            "dateTimeFormat" = ${DateTimeFormat}
            "siteTheme" = ${SiteTheme}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UserSettingsDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to UserSettingsDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UserSettingsDto<PSCustomObject>
#>
function ConvertFrom-JsonToUserSettingsDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => UserSettingsDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UserSettingsDto
        $AllProperties = ("id", "timestamp", "pageSize", "dateFormat", "currencyFormat", "dateTimeFormat", "siteTheme")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pageSize"))) { #optional property not found
            $PageSize = $null
        } else {
            $PageSize = $JsonParameters.PSobject.Properties["pageSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateFormat"))) { #optional property not found
            $DateFormat = $null
        } else {
            $DateFormat = $JsonParameters.PSobject.Properties["dateFormat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyFormat"))) { #optional property not found
            $CurrencyFormat = $null
        } else {
            $CurrencyFormat = $JsonParameters.PSobject.Properties["currencyFormat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateTimeFormat"))) { #optional property not found
            $DateTimeFormat = $null
        } else {
            $DateTimeFormat = $JsonParameters.PSobject.Properties["dateTimeFormat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "siteTheme"))) { #optional property not found
            $SiteTheme = $null
        } else {
            $SiteTheme = $JsonParameters.PSobject.Properties["siteTheme"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "pageSize" = ${PageSize}
            "dateFormat" = ${DateFormat}
            "currencyFormat" = ${CurrencyFormat}
            "dateTimeFormat" = ${DateTimeFormat}
            "siteTheme" = ${SiteTheme}
        }

        return $PSO
    }

}

