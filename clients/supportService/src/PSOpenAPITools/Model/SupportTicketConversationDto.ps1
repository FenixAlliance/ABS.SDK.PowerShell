#
# SupportService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER SupportTicketID
No description available.
.PARAMETER Topic
No description available.
.PARAMETER Closed
No description available.
.PARAMETER ClosedTimestamp
No description available.
.PARAMETER SocialProfileID
No description available.
.OUTPUTS

SupportTicketConversationDto<PSCustomObject>
#>

function Initialize-SupportTicketConversationDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SupportTicketID},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Topic},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Closed},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ClosedTimestamp},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SocialProfileID}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => SupportTicketConversationDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "supportTicketID" = ${SupportTicketID}
            "topic" = ${Topic}
            "closed" = ${Closed}
            "closedTimestamp" = ${ClosedTimestamp}
            "socialProfileID" = ${SocialProfileID}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SupportTicketConversationDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to SupportTicketConversationDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SupportTicketConversationDto<PSCustomObject>
#>
function ConvertFrom-JsonToSupportTicketConversationDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => SupportTicketConversationDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SupportTicketConversationDto
        $AllProperties = ("id", "timestamp", "supportTicketID", "topic", "closed", "closedTimestamp", "socialProfileID")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "supportTicketID"))) { #optional property not found
            $SupportTicketID = $null
        } else {
            $SupportTicketID = $JsonParameters.PSobject.Properties["supportTicketID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "topic"))) { #optional property not found
            $Topic = $null
        } else {
            $Topic = $JsonParameters.PSobject.Properties["topic"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "closed"))) { #optional property not found
            $Closed = $null
        } else {
            $Closed = $JsonParameters.PSobject.Properties["closed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "closedTimestamp"))) { #optional property not found
            $ClosedTimestamp = $null
        } else {
            $ClosedTimestamp = $JsonParameters.PSobject.Properties["closedTimestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "socialProfileID"))) { #optional property not found
            $SocialProfileID = $null
        } else {
            $SocialProfileID = $JsonParameters.PSobject.Properties["socialProfileID"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "supportTicketID" = ${SupportTicketID}
            "topic" = ${Topic}
            "closed" = ${Closed}
            "closedTimestamp" = ${ClosedTimestamp}
            "socialProfileID" = ${SocialProfileID}
        }

        return $PSO
    }

}

