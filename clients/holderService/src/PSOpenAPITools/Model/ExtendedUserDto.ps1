#
# HolderService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER FullName
No description available.
.PARAMETER QualifiedName
No description available.
.PARAMETER PublicName
No description available.
.PARAMETER LastName
No description available.
.PARAMETER FirstName
No description available.
.PARAMETER CoverUrl
No description available.
.PARAMETER AvatarUrl
No description available.
.PARAMETER GitHubUrl
No description available.
.PARAMETER CountryId
No description available.
.PARAMETER TimezoneId
No description available.
.PARAMETER WebsiteUrl
No description available.
.PARAMETER TwitterUrl
No description available.
.PARAMETER YouTubeUrl
No description available.
.PARAMETER LinkedInUrl
No description available.
.PARAMETER FacebookUrl
No description available.
.PARAMETER InstagramUrl
No description available.
.PARAMETER SocialProfileId
No description available.
.PARAMETER Birthday
No description available.
.PARAMETER IdProvider
No description available.
.PARAMETER LanguageId
No description available.
.PARAMETER Gender
No description available.
.PARAMETER CityId
No description available.
.PARAMETER StateId
No description available.
.PARAMETER Email
No description available.
.PARAMETER About
No description available.
.PARAMETER JobTitle
No description available.
.PARAMETER SocialFeedId
No description available.
.PARAMETER CurrentTenantId
No description available.
.PARAMETER CurrentEnrollmentId
No description available.
.PARAMETER Status
No description available.
.PARAMETER CartId
No description available.
.PARAMETER WalletId
No description available.
.PARAMETER UserName
No description available.
.PARAMETER CurrencyId
No description available.
.PARAMETER PhoneNumber
No description available.
.PARAMETER PublicIdentifier
No description available.
.PARAMETER IdentityProvider
No description available.
.PARAMETER PhoneNumberConfirmed
No description available.
.PARAMETER EmailConfirmed
No description available.
.PARAMETER Availability
No description available.
.PARAMETER LockoutEnabled
No description available.
.PARAMETER LockoutEnd
No description available.
.PARAMETER EnrollmentsCount
No description available.
.PARAMETER SiteTheme
No description available.
.PARAMETER Cart
No description available.
.PARAMETER Wallet
No description available.
.PARAMETER SocialProfile
No description available.
.PARAMETER Settings
No description available.
.OUTPUTS

ExtendedUserDto<PSCustomObject>
#>

function Initialize-ExtendedUserDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FullName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QualifiedName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PublicName},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastName},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FirstName},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CoverUrl},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AvatarUrl},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${GitHubUrl},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CountryId},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TimezoneId},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WebsiteUrl},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TwitterUrl},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${YouTubeUrl},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LinkedInUrl},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FacebookUrl},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InstagramUrl},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SocialProfileId},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Birthday},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdProvider},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LanguageId},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2")]
        [System.Nullable[Int32]]
        ${Gender},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CityId},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StateId},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Email},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${About},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${JobTitle},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SocialFeedId},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrentTenantId},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrentEnrollmentId},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CartId},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WalletId},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UserName},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CurrencyId},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PhoneNumber},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PublicIdentifier},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IdentityProvider},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${PhoneNumberConfirmed},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${EmailConfirmed},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2", "3", "4")]
        [System.Nullable[Int32]]
        ${Availability},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${LockoutEnabled},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LockoutEnd},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${EnrollmentsCount},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2")]
        [System.Nullable[Int32]]
        ${SiteTheme},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Cart},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Wallet},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${SocialProfile},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Settings}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ExtendedUserDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "fullName" = ${FullName}
            "qualifiedName" = ${QualifiedName}
            "publicName" = ${PublicName}
            "lastName" = ${LastName}
            "firstName" = ${FirstName}
            "coverUrl" = ${CoverUrl}
            "avatarUrl" = ${AvatarUrl}
            "gitHubUrl" = ${GitHubUrl}
            "countryId" = ${CountryId}
            "timezoneId" = ${TimezoneId}
            "websiteUrl" = ${WebsiteUrl}
            "twitterUrl" = ${TwitterUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "facebookUrl" = ${FacebookUrl}
            "instagramUrl" = ${InstagramUrl}
            "socialProfileId" = ${SocialProfileId}
            "birthday" = ${Birthday}
            "idProvider" = ${IdProvider}
            "languageId" = ${LanguageId}
            "gender" = ${Gender}
            "cityId" = ${CityId}
            "stateId" = ${StateId}
            "email" = ${Email}
            "about" = ${About}
            "jobTitle" = ${JobTitle}
            "socialFeedId" = ${SocialFeedId}
            "currentTenantId" = ${CurrentTenantId}
            "currentEnrollmentId" = ${CurrentEnrollmentId}
            "status" = ${Status}
            "cartId" = ${CartId}
            "walletId" = ${WalletId}
            "userName" = ${UserName}
            "currencyId" = ${CurrencyId}
            "phoneNumber" = ${PhoneNumber}
            "publicIdentifier" = ${PublicIdentifier}
            "identityProvider" = ${IdentityProvider}
            "phoneNumberConfirmed" = ${PhoneNumberConfirmed}
            "emailConfirmed" = ${EmailConfirmed}
            "availability" = ${Availability}
            "lockoutEnabled" = ${LockoutEnabled}
            "lockoutEnd" = ${LockoutEnd}
            "enrollmentsCount" = ${EnrollmentsCount}
            "siteTheme" = ${SiteTheme}
            "cart" = ${Cart}
            "wallet" = ${Wallet}
            "socialProfile" = ${SocialProfile}
            "settings" = ${Settings}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ExtendedUserDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to ExtendedUserDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ExtendedUserDto<PSCustomObject>
#>
function ConvertFrom-JsonToExtendedUserDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ExtendedUserDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ExtendedUserDto
        $AllProperties = ("id", "timestamp", "fullName", "qualifiedName", "publicName", "lastName", "firstName", "coverUrl", "avatarUrl", "gitHubUrl", "countryId", "timezoneId", "websiteUrl", "twitterUrl", "youTubeUrl", "linkedInUrl", "facebookUrl", "instagramUrl", "socialProfileId", "birthday", "idProvider", "languageId", "gender", "cityId", "stateId", "email", "about", "jobTitle", "socialFeedId", "currentTenantId", "currentEnrollmentId", "status", "cartId", "walletId", "userName", "currencyId", "phoneNumber", "publicIdentifier", "identityProvider", "phoneNumberConfirmed", "emailConfirmed", "availability", "lockoutEnabled", "lockoutEnd", "enrollmentsCount", "siteTheme", "cart", "wallet", "socialProfile", "settings")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fullName"))) { #optional property not found
            $FullName = $null
        } else {
            $FullName = $JsonParameters.PSobject.Properties["fullName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "qualifiedName"))) { #optional property not found
            $QualifiedName = $null
        } else {
            $QualifiedName = $JsonParameters.PSobject.Properties["qualifiedName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "publicName"))) { #optional property not found
            $PublicName = $null
        } else {
            $PublicName = $JsonParameters.PSobject.Properties["publicName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastName"))) { #optional property not found
            $LastName = $null
        } else {
            $LastName = $JsonParameters.PSobject.Properties["lastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "firstName"))) { #optional property not found
            $FirstName = $null
        } else {
            $FirstName = $JsonParameters.PSobject.Properties["firstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "coverUrl"))) { #optional property not found
            $CoverUrl = $null
        } else {
            $CoverUrl = $JsonParameters.PSobject.Properties["coverUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avatarUrl"))) { #optional property not found
            $AvatarUrl = $null
        } else {
            $AvatarUrl = $JsonParameters.PSobject.Properties["avatarUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gitHubUrl"))) { #optional property not found
            $GitHubUrl = $null
        } else {
            $GitHubUrl = $JsonParameters.PSobject.Properties["gitHubUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "countryId"))) { #optional property not found
            $CountryId = $null
        } else {
            $CountryId = $JsonParameters.PSobject.Properties["countryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timezoneId"))) { #optional property not found
            $TimezoneId = $null
        } else {
            $TimezoneId = $JsonParameters.PSobject.Properties["timezoneId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "websiteUrl"))) { #optional property not found
            $WebsiteUrl = $null
        } else {
            $WebsiteUrl = $JsonParameters.PSobject.Properties["websiteUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "twitterUrl"))) { #optional property not found
            $TwitterUrl = $null
        } else {
            $TwitterUrl = $JsonParameters.PSobject.Properties["twitterUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "youTubeUrl"))) { #optional property not found
            $YouTubeUrl = $null
        } else {
            $YouTubeUrl = $JsonParameters.PSobject.Properties["youTubeUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "linkedInUrl"))) { #optional property not found
            $LinkedInUrl = $null
        } else {
            $LinkedInUrl = $JsonParameters.PSobject.Properties["linkedInUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "facebookUrl"))) { #optional property not found
            $FacebookUrl = $null
        } else {
            $FacebookUrl = $JsonParameters.PSobject.Properties["facebookUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "instagramUrl"))) { #optional property not found
            $InstagramUrl = $null
        } else {
            $InstagramUrl = $JsonParameters.PSobject.Properties["instagramUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "socialProfileId"))) { #optional property not found
            $SocialProfileId = $null
        } else {
            $SocialProfileId = $JsonParameters.PSobject.Properties["socialProfileId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "birthday"))) { #optional property not found
            $Birthday = $null
        } else {
            $Birthday = $JsonParameters.PSobject.Properties["birthday"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "idProvider"))) { #optional property not found
            $IdProvider = $null
        } else {
            $IdProvider = $JsonParameters.PSobject.Properties["idProvider"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "languageId"))) { #optional property not found
            $LanguageId = $null
        } else {
            $LanguageId = $JsonParameters.PSobject.Properties["languageId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "gender"))) { #optional property not found
            $Gender = $null
        } else {
            $Gender = $JsonParameters.PSobject.Properties["gender"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cityId"))) { #optional property not found
            $CityId = $null
        } else {
            $CityId = $JsonParameters.PSobject.Properties["cityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stateId"))) { #optional property not found
            $StateId = $null
        } else {
            $StateId = $JsonParameters.PSobject.Properties["stateId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "email"))) { #optional property not found
            $Email = $null
        } else {
            $Email = $JsonParameters.PSobject.Properties["email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "about"))) { #optional property not found
            $About = $null
        } else {
            $About = $JsonParameters.PSobject.Properties["about"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jobTitle"))) { #optional property not found
            $JobTitle = $null
        } else {
            $JobTitle = $JsonParameters.PSobject.Properties["jobTitle"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "socialFeedId"))) { #optional property not found
            $SocialFeedId = $null
        } else {
            $SocialFeedId = $JsonParameters.PSobject.Properties["socialFeedId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currentTenantId"))) { #optional property not found
            $CurrentTenantId = $null
        } else {
            $CurrentTenantId = $JsonParameters.PSobject.Properties["currentTenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currentEnrollmentId"))) { #optional property not found
            $CurrentEnrollmentId = $null
        } else {
            $CurrentEnrollmentId = $JsonParameters.PSobject.Properties["currentEnrollmentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cartId"))) { #optional property not found
            $CartId = $null
        } else {
            $CartId = $JsonParameters.PSobject.Properties["cartId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "walletId"))) { #optional property not found
            $WalletId = $null
        } else {
            $WalletId = $JsonParameters.PSobject.Properties["walletId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "userName"))) { #optional property not found
            $UserName = $null
        } else {
            $UserName = $JsonParameters.PSobject.Properties["userName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currencyId"))) { #optional property not found
            $CurrencyId = $null
        } else {
            $CurrencyId = $JsonParameters.PSobject.Properties["currencyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phoneNumber"))) { #optional property not found
            $PhoneNumber = $null
        } else {
            $PhoneNumber = $JsonParameters.PSobject.Properties["phoneNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "publicIdentifier"))) { #optional property not found
            $PublicIdentifier = $null
        } else {
            $PublicIdentifier = $JsonParameters.PSobject.Properties["publicIdentifier"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "identityProvider"))) { #optional property not found
            $IdentityProvider = $null
        } else {
            $IdentityProvider = $JsonParameters.PSobject.Properties["identityProvider"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phoneNumberConfirmed"))) { #optional property not found
            $PhoneNumberConfirmed = $null
        } else {
            $PhoneNumberConfirmed = $JsonParameters.PSobject.Properties["phoneNumberConfirmed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "emailConfirmed"))) { #optional property not found
            $EmailConfirmed = $null
        } else {
            $EmailConfirmed = $JsonParameters.PSobject.Properties["emailConfirmed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "availability"))) { #optional property not found
            $Availability = $null
        } else {
            $Availability = $JsonParameters.PSobject.Properties["availability"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lockoutEnabled"))) { #optional property not found
            $LockoutEnabled = $null
        } else {
            $LockoutEnabled = $JsonParameters.PSobject.Properties["lockoutEnabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lockoutEnd"))) { #optional property not found
            $LockoutEnd = $null
        } else {
            $LockoutEnd = $JsonParameters.PSobject.Properties["lockoutEnd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrollmentsCount"))) { #optional property not found
            $EnrollmentsCount = $null
        } else {
            $EnrollmentsCount = $JsonParameters.PSobject.Properties["enrollmentsCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "siteTheme"))) { #optional property not found
            $SiteTheme = $null
        } else {
            $SiteTheme = $JsonParameters.PSobject.Properties["siteTheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cart"))) { #optional property not found
            $Cart = $null
        } else {
            $Cart = $JsonParameters.PSobject.Properties["cart"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wallet"))) { #optional property not found
            $Wallet = $null
        } else {
            $Wallet = $JsonParameters.PSobject.Properties["wallet"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "socialProfile"))) { #optional property not found
            $SocialProfile = $null
        } else {
            $SocialProfile = $JsonParameters.PSobject.Properties["socialProfile"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "settings"))) { #optional property not found
            $Settings = $null
        } else {
            $Settings = $JsonParameters.PSobject.Properties["settings"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "fullName" = ${FullName}
            "qualifiedName" = ${QualifiedName}
            "publicName" = ${PublicName}
            "lastName" = ${LastName}
            "firstName" = ${FirstName}
            "coverUrl" = ${CoverUrl}
            "avatarUrl" = ${AvatarUrl}
            "gitHubUrl" = ${GitHubUrl}
            "countryId" = ${CountryId}
            "timezoneId" = ${TimezoneId}
            "websiteUrl" = ${WebsiteUrl}
            "twitterUrl" = ${TwitterUrl}
            "youTubeUrl" = ${YouTubeUrl}
            "linkedInUrl" = ${LinkedInUrl}
            "facebookUrl" = ${FacebookUrl}
            "instagramUrl" = ${InstagramUrl}
            "socialProfileId" = ${SocialProfileId}
            "birthday" = ${Birthday}
            "idProvider" = ${IdProvider}
            "languageId" = ${LanguageId}
            "gender" = ${Gender}
            "cityId" = ${CityId}
            "stateId" = ${StateId}
            "email" = ${Email}
            "about" = ${About}
            "jobTitle" = ${JobTitle}
            "socialFeedId" = ${SocialFeedId}
            "currentTenantId" = ${CurrentTenantId}
            "currentEnrollmentId" = ${CurrentEnrollmentId}
            "status" = ${Status}
            "cartId" = ${CartId}
            "walletId" = ${WalletId}
            "userName" = ${UserName}
            "currencyId" = ${CurrencyId}
            "phoneNumber" = ${PhoneNumber}
            "publicIdentifier" = ${PublicIdentifier}
            "identityProvider" = ${IdentityProvider}
            "phoneNumberConfirmed" = ${PhoneNumberConfirmed}
            "emailConfirmed" = ${EmailConfirmed}
            "availability" = ${Availability}
            "lockoutEnabled" = ${LockoutEnabled}
            "lockoutEnd" = ${LockoutEnd}
            "enrollmentsCount" = ${EnrollmentsCount}
            "siteTheme" = ${SiteTheme}
            "cart" = ${Cart}
            "wallet" = ${Wallet}
            "socialProfile" = ${SocialProfile}
            "settings" = ${Settings}
        }

        return $PSO
    }

}

