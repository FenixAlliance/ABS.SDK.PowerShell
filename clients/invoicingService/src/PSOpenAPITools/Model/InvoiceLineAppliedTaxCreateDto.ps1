#
# InvoicingService
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 2.0.1.4089
# Contact: support@fenix-alliance.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Timestamp
No description available.
.PARAMETER TenantId
No description available.
.PARAMETER InvoiceId
No description available.
.PARAMETER TaxPolicyId
No description available.
.PARAMETER EnrollmentId
No description available.
.OUTPUTS

InvoiceLineAppliedTaxCreateDto<PSCustomObject>
#>

function Initialize-InvoiceLineAppliedTaxCreateDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Timestamp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InvoiceId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxPolicyId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EnrollmentId}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => InvoiceLineAppliedTaxCreateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "tenantId" = ${TenantId}
            "invoiceId" = ${InvoiceId}
            "taxPolicyId" = ${TaxPolicyId}
            "enrollmentId" = ${EnrollmentId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InvoiceLineAppliedTaxCreateDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to InvoiceLineAppliedTaxCreateDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InvoiceLineAppliedTaxCreateDto<PSCustomObject>
#>
function ConvertFrom-JsonToInvoiceLineAppliedTaxCreateDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => InvoiceLineAppliedTaxCreateDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in InvoiceLineAppliedTaxCreateDto
        $AllProperties = ("id", "timestamp", "tenantId", "invoiceId", "taxPolicyId", "enrollmentId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp"))) { #optional property not found
            $Timestamp = $null
        } else {
            $Timestamp = $JsonParameters.PSobject.Properties["timestamp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenantId"))) { #optional property not found
            $TenantId = $null
        } else {
            $TenantId = $JsonParameters.PSobject.Properties["tenantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "invoiceId"))) { #optional property not found
            $InvoiceId = $null
        } else {
            $InvoiceId = $JsonParameters.PSobject.Properties["invoiceId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxPolicyId"))) { #optional property not found
            $TaxPolicyId = $null
        } else {
            $TaxPolicyId = $JsonParameters.PSobject.Properties["taxPolicyId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enrollmentId"))) { #optional property not found
            $EnrollmentId = $null
        } else {
            $EnrollmentId = $JsonParameters.PSobject.Properties["enrollmentId"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "timestamp" = ${Timestamp}
            "tenantId" = ${TenantId}
            "invoiceId" = ${InvoiceId}
            "taxPolicyId" = ${TaxPolicyId}
            "enrollmentId" = ${EnrollmentId}
        }

        return $PSO
    }

}

